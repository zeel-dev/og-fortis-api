<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models;

use stdClass;

/**
 * Log Sms Information on `expand`
 */
class LogSms implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $id;

    /**
     * @var array
     */
    private $body = [];

    /**
     * @var string|null
     */
    private $reasonModel;

    /**
     * @var string|null
     */
    private $reasonModelId;

    /**
     * @var string|null
     */
    private $providerId;

    /**
     * @var string|null
     */
    private $status;

    /**
     * @var string|null
     */
    private $sender;

    /**
     * @var string|null
     */
    private $recipient;

    /**
     * @var int|null
     */
    private $createdTs;

    /**
     * @var string|null
     */
    private $createdUserId;

    /**
     * Returns Id.
     * Log Sms Id
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     * Log Sms Id
     *
     * @maps id
     */
    public function setId(?string $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Body.
     * Body
     */
    public function getBody(): ?string
    {
        if (count($this->body) == 0) {
            return null;
        }
        return $this->body['value'];
    }

    /**
     * Sets Body.
     * Body
     *
     * @maps body
     */
    public function setBody(?string $body): void
    {
        $this->body['value'] = $body;
    }

    /**
     * Unsets Body.
     * Body
     */
    public function unsetBody(): void
    {
        $this->body = [];
    }

    /**
     * Returns Reason Model.
     * Reason Model
     */
    public function getReasonModel(): ?string
    {
        return $this->reasonModel;
    }

    /**
     * Sets Reason Model.
     * Reason Model
     *
     * @maps reason_model
     */
    public function setReasonModel(?string $reasonModel): void
    {
        $this->reasonModel = $reasonModel;
    }

    /**
     * Returns Reason Model Id.
     * Reason Model ID
     */
    public function getReasonModelId(): ?string
    {
        return $this->reasonModelId;
    }

    /**
     * Sets Reason Model Id.
     * Reason Model ID
     *
     * @maps reason_model_id
     */
    public function setReasonModelId(?string $reasonModelId): void
    {
        $this->reasonModelId = $reasonModelId;
    }

    /**
     * Returns Provider Id.
     * Provider ID
     */
    public function getProviderId(): ?string
    {
        return $this->providerId;
    }

    /**
     * Sets Provider Id.
     * Provider ID
     *
     * @maps provider_id
     */
    public function setProviderId(?string $providerId): void
    {
        $this->providerId = $providerId;
    }

    /**
     * Returns Status.
     * Status
     */
    public function getStatus(): ?string
    {
        return $this->status;
    }

    /**
     * Sets Status.
     * Status
     *
     * @maps status
     */
    public function setStatus(?string $status): void
    {
        $this->status = $status;
    }

    /**
     * Returns Sender.
     * Sender
     */
    public function getSender(): ?string
    {
        return $this->sender;
    }

    /**
     * Sets Sender.
     * Sender
     *
     * @maps sender
     */
    public function setSender(?string $sender): void
    {
        $this->sender = $sender;
    }

    /**
     * Returns Recipient.
     * Recipient
     */
    public function getRecipient(): ?string
    {
        return $this->recipient;
    }

    /**
     * Sets Recipient.
     * Recipient
     *
     * @maps recipient
     */
    public function setRecipient(?string $recipient): void
    {
        $this->recipient = $recipient;
    }

    /**
     * Returns Created Ts.
     * Created Time Stamp
     */
    public function getCreatedTs(): ?int
    {
        return $this->createdTs;
    }

    /**
     * Sets Created Ts.
     * Created Time Stamp
     *
     * @maps created_ts
     */
    public function setCreatedTs(?int $createdTs): void
    {
        $this->createdTs = $createdTs;
    }

    /**
     * Returns Created User Id.
     * User ID Created the register
     */
    public function getCreatedUserId(): ?string
    {
        return $this->createdUserId;
    }

    /**
     * Sets Created User Id.
     * User ID Created the register
     *
     * @maps created_user_id
     */
    public function setCreatedUserId(?string $createdUserId): void
    {
        $this->createdUserId = $createdUserId;
    }

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function addAdditionalProperty(string $name, $value)
    {
        $this->additionalProperties[$name] = $value;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->id)) {
            $json['id']              = $this->id;
        }
        if (!empty($this->body)) {
            $json['body']            = $this->body['value'];
        }
        if (isset($this->reasonModel)) {
            $json['reason_model']    = $this->reasonModel;
        }
        if (isset($this->reasonModelId)) {
            $json['reason_model_id'] = $this->reasonModelId;
        }
        if (isset($this->providerId)) {
            $json['provider_id']     = $this->providerId;
        }
        if (isset($this->status)) {
            $json['status']          = $this->status;
        }
        if (isset($this->sender)) {
            $json['sender']          = $this->sender;
        }
        if (isset($this->recipient)) {
            $json['recipient']       = $this->recipient;
        }
        if (isset($this->createdTs)) {
            $json['created_ts']      = $this->createdTs;
        }
        if (isset($this->createdUserId)) {
            $json['created_user_id'] = $this->createdUserId;
        }
        $json = array_merge($json, $this->additionalProperties);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
