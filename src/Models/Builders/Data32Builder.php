<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use FortisAPILib\Models\Data32;

/**
 * Builder for model Data32
 *
 * @see Data32
 */
class Data32Builder
{
    /**
     * @var Data32
     */
    private $instance;

    private function __construct(Data32 $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new data 32 Builder object.
     */
    public static function init(): self
    {
        return new self(new Data32());
    }

    /**
     * Sets result code field.
     */
    public function resultCode(?bool $value): self
    {
        $this->instance->setResultCode($value);
        return $this;
    }

    /**
     * Sets merchant id field.
     */
    public function merchantID(?string $value): self
    {
        $this->instance->setMerchantID($value);
        return $this;
    }

    /**
     * Sets apple pay field.
     */
    public function applePay(?bool $value): self
    {
        $this->instance->setApplePay($value);
        return $this;
    }

    /**
     * Sets google pay field.
     */
    public function googlePay(?bool $value): self
    {
        $this->instance->setGooglePay($value);
        return $this;
    }

    /**
     * Sets apple pay domains field.
     */
    public function applePayDomains(?array $value): self
    {
        $this->instance->setApplePayDomains($value);
        return $this;
    }

    /**
     * Sets message field.
     */
    public function message(?string $value): self
    {
        $this->instance->setMessage($value);
        return $this;
    }

    /**
     * Sets google jwt field.
     */
    public function googleJWT(?string $value): self
    {
        $this->instance->setGoogleJWT($value);
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new data 32 object.
     */
    public function build(): Data32
    {
        return CoreHelper::clone($this->instance);
    }
}
