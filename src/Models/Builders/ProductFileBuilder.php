<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use FortisAPILib\Models\ProductFile;

/**
 * Builder for model ProductFile
 *
 * @see ProductFile
 */
class ProductFileBuilder
{
    /**
     * @var ProductFile
     */
    private $instance;

    private function __construct(ProductFile $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new product file Builder object.
     */
    public static function init(): self
    {
        return new self(new ProductFile());
    }

    /**
     * Sets title field.
     */
    public function title(?string $value): self
    {
        $this->instance->setTitle($value);
        return $this;
    }

    /**
     * Sets product file credential id field.
     */
    public function productFileCredentialId(?string $value): self
    {
        $this->instance->setProductFileCredentialId($value);
        return $this;
    }

    /**
     * Sets free bytes field.
     */
    public function freeBytes(?float $value): self
    {
        $this->instance->setFreeBytes($value);
        return $this;
    }

    /**
     * Unsets free bytes field.
     */
    public function unsetFreeBytes(): self
    {
        $this->instance->unsetFreeBytes();
        return $this;
    }

    /**
     * Sets byte increment field.
     */
    public function byteIncrement(?float $value): self
    {
        $this->instance->setByteIncrement($value);
        return $this;
    }

    /**
     * Unsets byte increment field.
     */
    public function unsetByteIncrement(): self
    {
        $this->instance->unsetByteIncrement();
        return $this;
    }

    /**
     * Sets max file size bytes field.
     */
    public function maxFileSizeBytes(?float $value): self
    {
        $this->instance->setMaxFileSizeBytes($value);
        return $this;
    }

    /**
     * Unsets max file size bytes field.
     */
    public function unsetMaxFileSizeBytes(): self
    {
        $this->instance->unsetMaxFileSizeBytes();
        return $this;
    }

    /**
     * Sets increment cost field.
     */
    public function incrementCost(?float $value): self
    {
        $this->instance->setIncrementCost($value);
        return $this;
    }

    /**
     * Unsets increment cost field.
     */
    public function unsetIncrementCost(): self
    {
        $this->instance->unsetIncrementCost();
        return $this;
    }

    /**
     * Sets monthly fee field.
     */
    public function monthlyFee(?int $value): self
    {
        $this->instance->setMonthlyFee($value);
        return $this;
    }

    /**
     * Unsets monthly fee field.
     */
    public function unsetMonthlyFee(): self
    {
        $this->instance->unsetMonthlyFee();
        return $this;
    }

    /**
     * Sets file ext allowed field.
     */
    public function fileExtAllowed(?string $value): self
    {
        $this->instance->setFileExtAllowed($value);
        return $this;
    }

    /**
     * Unsets file ext allowed field.
     */
    public function unsetFileExtAllowed(): self
    {
        $this->instance->unsetFileExtAllowed();
        return $this;
    }

    /**
     * Sets container field.
     */
    public function container(?string $value): self
    {
        $this->instance->setContainer($value);
        return $this;
    }

    /**
     * Unsets container field.
     */
    public function unsetContainer(): self
    {
        $this->instance->unsetContainer();
        return $this;
    }

    /**
     * Sets id field.
     */
    public function id(?string $value): self
    {
        $this->instance->setId($value);
        return $this;
    }

    /**
     * Sets created ts field.
     */
    public function createdTs(?int $value): self
    {
        $this->instance->setCreatedTs($value);
        return $this;
    }

    /**
     * Unsets created ts field.
     */
    public function unsetCreatedTs(): self
    {
        $this->instance->unsetCreatedTs();
        return $this;
    }

    /**
     * Sets modified ts field.
     */
    public function modifiedTs(?int $value): self
    {
        $this->instance->setModifiedTs($value);
        return $this;
    }

    /**
     * Unsets modified ts field.
     */
    public function unsetModifiedTs(): self
    {
        $this->instance->unsetModifiedTs();
        return $this;
    }

    /**
     * Sets active field.
     */
    public function active(?bool $value): self
    {
        $this->instance->setActive($value);
        return $this;
    }

    /**
     * Sets created user id field.
     */
    public function createdUserId(?string $value): self
    {
        $this->instance->setCreatedUserId($value);
        return $this;
    }

    /**
     * Unsets created user id field.
     */
    public function unsetCreatedUserId(): self
    {
        $this->instance->unsetCreatedUserId();
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new product file object.
     */
    public function build(): ProductFile
    {
        return CoreHelper::clone($this->instance);
    }
}
