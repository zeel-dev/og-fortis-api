<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use FortisAPILib\Models\Addon;

/**
 * Builder for model Addon
 *
 * @see Addon
 */
class AddonBuilder
{
    /**
     * @var Addon
     */
    private $instance;

    private function __construct(Addon $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new addon Builder object.
     */
    public static function init(): self
    {
        return new self(new Addon());
    }

    /**
     * Sets title field.
     */
    public function title(?string $value): self
    {
        $this->instance->setTitle($value);
        return $this;
    }

    /**
     * Sets secret field.
     */
    public function secret(?string $value): self
    {
        $this->instance->setSecret($value);
        return $this;
    }

    /**
     * Sets iframe url field.
     */
    public function iframeUrl(?string $value): self
    {
        $this->instance->setIframeUrl($value);
        return $this;
    }

    /**
     * Sets location setup url field.
     */
    public function locationSetupUrl(?string $value): self
    {
        $this->instance->setLocationSetupUrl($value);
        return $this;
    }

    /**
     * Unsets location setup url field.
     */
    public function unsetLocationSetupUrl(): self
    {
        $this->instance->unsetLocationSetupUrl();
        return $this;
    }

    /**
     * Sets user setup url field.
     */
    public function userSetupUrl(?string $value): self
    {
        $this->instance->setUserSetupUrl($value);
        return $this;
    }

    /**
     * Unsets user setup url field.
     */
    public function unsetUserSetupUrl(): self
    {
        $this->instance->unsetUserSetupUrl();
        return $this;
    }

    /**
     * Sets encrypt url params field.
     */
    public function encryptUrlParams(?bool $value): self
    {
        $this->instance->setEncryptUrlParams($value);
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new addon object.
     */
    public function build(): Addon
    {
        return CoreHelper::clone($this->instance);
    }
}
