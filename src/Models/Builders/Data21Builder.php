<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use FortisAPILib\Models\BillingAddress;
use FortisAPILib\Models\Contact1;
use FortisAPILib\Models\CreatedUser;
use FortisAPILib\Models\Data21;
use FortisAPILib\Models\IdentityVerification2;
use FortisAPILib\Models\Joi4;
use FortisAPILib\Models\Location;
use FortisAPILib\Models\Signature;

/**
 * Builder for model Data21
 *
 * @see Data21
 */
class Data21Builder
{
    /**
     * @var Data21
     */
    private $instance;

    private function __construct(Data21 $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new data 21 Builder object.
     */
    public static function init(): self
    {
        return new self(new Data21());
    }

    /**
     * Sets account holder name field.
     */
    public function accountHolderName(?string $value): self
    {
        $this->instance->setAccountHolderName($value);
        return $this;
    }

    /**
     * Unsets account holder name field.
     */
    public function unsetAccountHolderName(): self
    {
        $this->instance->unsetAccountHolderName();
        return $this;
    }

    /**
     * Sets account vault api id field.
     */
    public function accountVaultApiId(?string $value): self
    {
        $this->instance->setAccountVaultApiId($value);
        return $this;
    }

    /**
     * Unsets account vault api id field.
     */
    public function unsetAccountVaultApiId(): self
    {
        $this->instance->unsetAccountVaultApiId();
        return $this;
    }

    /**
     * Sets token api id field.
     */
    public function tokenApiId(?string $value): self
    {
        $this->instance->setTokenApiId($value);
        return $this;
    }

    /**
     * Unsets token api id field.
     */
    public function unsetTokenApiId(): self
    {
        $this->instance->unsetTokenApiId();
        return $this;
    }

    /**
     * Sets accountvault c 1 field.
     */
    public function accountvaultC1(?string $value): self
    {
        $this->instance->setAccountvaultC1($value);
        return $this;
    }

    /**
     * Unsets accountvault c 1 field.
     */
    public function unsetAccountvaultC1(): self
    {
        $this->instance->unsetAccountvaultC1();
        return $this;
    }

    /**
     * Sets accountvault c 2 field.
     */
    public function accountvaultC2(?string $value): self
    {
        $this->instance->setAccountvaultC2($value);
        return $this;
    }

    /**
     * Unsets accountvault c 2 field.
     */
    public function unsetAccountvaultC2(): self
    {
        $this->instance->unsetAccountvaultC2();
        return $this;
    }

    /**
     * Sets accountvault c 3 field.
     */
    public function accountvaultC3(?string $value): self
    {
        $this->instance->setAccountvaultC3($value);
        return $this;
    }

    /**
     * Unsets accountvault c 3 field.
     */
    public function unsetAccountvaultC3(): self
    {
        $this->instance->unsetAccountvaultC3();
        return $this;
    }

    /**
     * Sets token c 1 field.
     */
    public function tokenC1(?string $value): self
    {
        $this->instance->setTokenC1($value);
        return $this;
    }

    /**
     * Unsets token c 1 field.
     */
    public function unsetTokenC1(): self
    {
        $this->instance->unsetTokenC1();
        return $this;
    }

    /**
     * Sets token c 2 field.
     */
    public function tokenC2(?string $value): self
    {
        $this->instance->setTokenC2($value);
        return $this;
    }

    /**
     * Unsets token c 2 field.
     */
    public function unsetTokenC2(): self
    {
        $this->instance->unsetTokenC2();
        return $this;
    }

    /**
     * Sets token c 3 field.
     */
    public function tokenC3(?string $value): self
    {
        $this->instance->setTokenC3($value);
        return $this;
    }

    /**
     * Unsets token c 3 field.
     */
    public function unsetTokenC3(): self
    {
        $this->instance->unsetTokenC3();
        return $this;
    }

    /**
     * Sets ach sec code field.
     */
    public function achSecCode(?string $value): self
    {
        $this->instance->setAchSecCode($value);
        return $this;
    }

    /**
     * Unsets ach sec code field.
     */
    public function unsetAchSecCode(): self
    {
        $this->instance->unsetAchSecCode();
        return $this;
    }

    /**
     * Sets billing address field.
     */
    public function billingAddress(?BillingAddress $value): self
    {
        $this->instance->setBillingAddress($value);
        return $this;
    }

    /**
     * Sets contact id field.
     */
    public function contactId(?string $value): self
    {
        $this->instance->setContactId($value);
        return $this;
    }

    /**
     * Unsets contact id field.
     */
    public function unsetContactId(): self
    {
        $this->instance->unsetContactId();
        return $this;
    }

    /**
     * Sets customer id field.
     */
    public function customerId(?string $value): self
    {
        $this->instance->setCustomerId($value);
        return $this;
    }

    /**
     * Unsets customer id field.
     */
    public function unsetCustomerId(): self
    {
        $this->instance->unsetCustomerId();
        return $this;
    }

    /**
     * Sets identity verification field.
     */
    public function identityVerification(?IdentityVerification2 $value): self
    {
        $this->instance->setIdentityVerification($value);
        return $this;
    }

    /**
     * Sets location id field.
     */
    public function locationId(?string $value): self
    {
        $this->instance->setLocationId($value);
        return $this;
    }

    /**
     * Sets previous account vault api id field.
     */
    public function previousAccountVaultApiId(?string $value): self
    {
        $this->instance->setPreviousAccountVaultApiId($value);
        return $this;
    }

    /**
     * Unsets previous account vault api id field.
     */
    public function unsetPreviousAccountVaultApiId(): self
    {
        $this->instance->unsetPreviousAccountVaultApiId();
        return $this;
    }

    /**
     * Sets previous token api id field.
     */
    public function previousTokenApiId(?string $value): self
    {
        $this->instance->setPreviousTokenApiId($value);
        return $this;
    }

    /**
     * Unsets previous token api id field.
     */
    public function unsetPreviousTokenApiId(): self
    {
        $this->instance->unsetPreviousTokenApiId();
        return $this;
    }

    /**
     * Sets previous account vault id field.
     */
    public function previousAccountVaultId(?string $value): self
    {
        $this->instance->setPreviousAccountVaultId($value);
        return $this;
    }

    /**
     * Unsets previous account vault id field.
     */
    public function unsetPreviousAccountVaultId(): self
    {
        $this->instance->unsetPreviousAccountVaultId();
        return $this;
    }

    /**
     * Sets previous token id field.
     */
    public function previousTokenId(?string $value): self
    {
        $this->instance->setPreviousTokenId($value);
        return $this;
    }

    /**
     * Unsets previous token id field.
     */
    public function unsetPreviousTokenId(): self
    {
        $this->instance->unsetPreviousTokenId();
        return $this;
    }

    /**
     * Sets previous transaction id field.
     */
    public function previousTransactionId(?string $value): self
    {
        $this->instance->setPreviousTransactionId($value);
        return $this;
    }

    /**
     * Unsets previous transaction id field.
     */
    public function unsetPreviousTransactionId(): self
    {
        $this->instance->unsetPreviousTransactionId();
        return $this;
    }

    /**
     * Sets account number field.
     */
    public function accountNumber(?string $value): self
    {
        $this->instance->setAccountNumber($value);
        return $this;
    }

    /**
     * Unsets account number field.
     */
    public function unsetAccountNumber(): self
    {
        $this->instance->unsetAccountNumber();
        return $this;
    }

    /**
     * Sets terms agree field.
     */
    public function termsAgree(?bool $value): self
    {
        $this->instance->setTermsAgree($value);
        return $this;
    }

    /**
     * Sets terms agree ip field.
     */
    public function termsAgreeIp(?string $value): self
    {
        $this->instance->setTermsAgreeIp($value);
        return $this;
    }

    /**
     * Unsets terms agree ip field.
     */
    public function unsetTermsAgreeIp(): self
    {
        $this->instance->unsetTermsAgreeIp();
        return $this;
    }

    /**
     * Sets title field.
     */
    public function title(?string $value): self
    {
        $this->instance->setTitle($value);
        return $this;
    }

    /**
     * Unsets title field.
     */
    public function unsetTitle(): self
    {
        $this->instance->unsetTitle();
        return $this;
    }

    /**
     * Sets joi field.
     */
    public function joi(?Joi4 $value): self
    {
        $this->instance->setJoi($value);
        return $this;
    }

    /**
     * Sets id field.
     */
    public function id(?string $value): self
    {
        $this->instance->setId($value);
        return $this;
    }

    /**
     * Sets account type field.
     */
    public function accountType(?string $value): self
    {
        $this->instance->setAccountType($value);
        return $this;
    }

    /**
     * Sets active field.
     */
    public function active(?bool $value): self
    {
        $this->instance->setActive($value);
        return $this;
    }

    /**
     * Sets cau summary status id field.
     */
    public function cauSummaryStatusId(?int $value): self
    {
        $this->instance->setCauSummaryStatusId($value);
        return $this;
    }

    /**
     * Sets created ts field.
     */
    public function createdTs(?int $value): self
    {
        $this->instance->setCreatedTs($value);
        return $this;
    }

    /**
     * Sets e serial number field.
     */
    public function eSerialNumber(?string $value): self
    {
        $this->instance->setESerialNumber($value);
        return $this;
    }

    /**
     * Unsets e serial number field.
     */
    public function unsetESerialNumber(): self
    {
        $this->instance->unsetESerialNumber();
        return $this;
    }

    /**
     * Sets e track data field.
     */
    public function eTrackData(?string $value): self
    {
        $this->instance->setETrackData($value);
        return $this;
    }

    /**
     * Unsets e track data field.
     */
    public function unsetETrackData(): self
    {
        $this->instance->unsetETrackData();
        return $this;
    }

    /**
     * Sets e format field.
     */
    public function eFormat(?string $value): self
    {
        $this->instance->setEFormat($value);
        return $this;
    }

    /**
     * Unsets e format field.
     */
    public function unsetEFormat(): self
    {
        $this->instance->unsetEFormat();
        return $this;
    }

    /**
     * Sets e keyed data field.
     */
    public function eKeyedData(?string $value): self
    {
        $this->instance->setEKeyedData($value);
        return $this;
    }

    /**
     * Unsets e keyed data field.
     */
    public function unsetEKeyedData(): self
    {
        $this->instance->unsetEKeyedData();
        return $this;
    }

    /**
     * Sets expiring in months field.
     */
    public function expiringInMonths(?int $value): self
    {
        $this->instance->setExpiringInMonths($value);
        return $this;
    }

    /**
     * Unsets expiring in months field.
     */
    public function unsetExpiringInMonths(): self
    {
        $this->instance->unsetExpiringInMonths();
        return $this;
    }

    /**
     * Sets exp date field.
     */
    public function expDate(?string $value): self
    {
        $this->instance->setExpDate($value);
        return $this;
    }

    /**
     * Unsets exp date field.
     */
    public function unsetExpDate(): self
    {
        $this->instance->unsetExpDate();
        return $this;
    }

    /**
     * Sets first six field.
     */
    public function firstSix(?string $value): self
    {
        $this->instance->setFirstSix($value);
        return $this;
    }

    /**
     * Sets has recurring field.
     */
    public function hasRecurring(?bool $value): self
    {
        $this->instance->setHasRecurring($value);
        return $this;
    }

    /**
     * Sets last four field.
     */
    public function lastFour(?string $value): self
    {
        $this->instance->setLastFour($value);
        return $this;
    }

    /**
     * Sets modified ts field.
     */
    public function modifiedTs(?int $value): self
    {
        $this->instance->setModifiedTs($value);
        return $this;
    }

    /**
     * Sets payment method field.
     */
    public function paymentMethod(?string $value): self
    {
        $this->instance->setPaymentMethod($value);
        return $this;
    }

    /**
     * Sets ticket field.
     */
    public function ticket(?string $value): self
    {
        $this->instance->setTicket($value);
        return $this;
    }

    /**
     * Unsets ticket field.
     */
    public function unsetTicket(): self
    {
        $this->instance->unsetTicket();
        return $this;
    }

    /**
     * Sets track data field.
     */
    public function trackData(?string $value): self
    {
        $this->instance->setTrackData($value);
        return $this;
    }

    /**
     * Unsets track data field.
     */
    public function unsetTrackData(): self
    {
        $this->instance->unsetTrackData();
        return $this;
    }

    /**
     * Sets created user id field.
     */
    public function createdUserId(?string $value): self
    {
        $this->instance->setCreatedUserId($value);
        return $this;
    }

    /**
     * Unsets created user id field.
     */
    public function unsetCreatedUserId(): self
    {
        $this->instance->unsetCreatedUserId();
        return $this;
    }

    /**
     * Sets cau last updated ts field.
     */
    public function cauLastUpdatedTs(?int $value): self
    {
        $this->instance->setCauLastUpdatedTs($value);
        return $this;
    }

    /**
     * Unsets cau last updated ts field.
     */
    public function unsetCauLastUpdatedTs(): self
    {
        $this->instance->unsetCauLastUpdatedTs();
        return $this;
    }

    /**
     * Sets card bin field.
     */
    public function cardBin(?string $value): self
    {
        $this->instance->setCardBin($value);
        return $this;
    }

    /**
     * Unsets card bin field.
     */
    public function unsetCardBin(): self
    {
        $this->instance->unsetCardBin();
        return $this;
    }

    /**
     * Sets routing number field.
     */
    public function routingNumber(?string $value): self
    {
        $this->instance->setRoutingNumber($value);
        return $this;
    }

    /**
     * Unsets routing number field.
     */
    public function unsetRoutingNumber(): self
    {
        $this->instance->unsetRoutingNumber();
        return $this;
    }

    /**
     * Sets location field.
     */
    public function location(?Location $value): self
    {
        $this->instance->setLocation($value);
        return $this;
    }

    /**
     * Sets contact field.
     */
    public function contact(?Contact1 $value): self
    {
        $this->instance->setContact($value);
        return $this;
    }

    /**
     * Sets transactions field.
     */
    public function transactions(?array $value): self
    {
        $this->instance->setTransactions($value);
        return $this;
    }

    /**
     * Sets active recurrings field.
     */
    public function activeRecurrings(?array $value): self
    {
        $this->instance->setActiveRecurrings($value);
        return $this;
    }

    /**
     * Sets is deletable field.
     */
    public function isDeletable(?bool $value): self
    {
        $this->instance->setIsDeletable($value);
        return $this;
    }

    /**
     * Sets signature field.
     */
    public function signature(?Signature $value): self
    {
        $this->instance->setSignature($value);
        return $this;
    }

    /**
     * Sets created user field.
     */
    public function createdUser(?CreatedUser $value): self
    {
        $this->instance->setCreatedUser($value);
        return $this;
    }

    /**
     * Sets changelogs field.
     */
    public function changelogs(?array $value): self
    {
        $this->instance->setChangelogs($value);
        return $this;
    }

    /**
     * Sets account vault cau logs field.
     */
    public function accountVaultCauLogs(?array $value): self
    {
        $this->instance->setAccountVaultCauLogs($value);
        return $this;
    }

    /**
     * Sets account vault cau product transactions field.
     */
    public function accountVaultCauProductTransactions(?array $value): self
    {
        $this->instance->setAccountVaultCauProductTransactions($value);
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new data 21 object.
     */
    public function build(): Data21
    {
        return CoreHelper::clone($this->instance);
    }
}
