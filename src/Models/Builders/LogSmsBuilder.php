<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use FortisAPILib\Models\LogSms;

/**
 * Builder for model LogSms
 *
 * @see LogSms
 */
class LogSmsBuilder
{
    /**
     * @var LogSms
     */
    private $instance;

    private function __construct(LogSms $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new log sms Builder object.
     */
    public static function init(): self
    {
        return new self(new LogSms());
    }

    /**
     * Sets id field.
     */
    public function id(?string $value): self
    {
        $this->instance->setId($value);
        return $this;
    }

    /**
     * Sets body field.
     */
    public function body(?string $value): self
    {
        $this->instance->setBody($value);
        return $this;
    }

    /**
     * Unsets body field.
     */
    public function unsetBody(): self
    {
        $this->instance->unsetBody();
        return $this;
    }

    /**
     * Sets reason model field.
     */
    public function reasonModel(?string $value): self
    {
        $this->instance->setReasonModel($value);
        return $this;
    }

    /**
     * Sets reason model id field.
     */
    public function reasonModelId(?string $value): self
    {
        $this->instance->setReasonModelId($value);
        return $this;
    }

    /**
     * Sets provider id field.
     */
    public function providerId(?string $value): self
    {
        $this->instance->setProviderId($value);
        return $this;
    }

    /**
     * Sets status field.
     */
    public function status(?string $value): self
    {
        $this->instance->setStatus($value);
        return $this;
    }

    /**
     * Sets sender field.
     */
    public function sender(?string $value): self
    {
        $this->instance->setSender($value);
        return $this;
    }

    /**
     * Sets recipient field.
     */
    public function recipient(?string $value): self
    {
        $this->instance->setRecipient($value);
        return $this;
    }

    /**
     * Sets created ts field.
     */
    public function createdTs(?int $value): self
    {
        $this->instance->setCreatedTs($value);
        return $this;
    }

    /**
     * Sets created user id field.
     */
    public function createdUserId(?string $value): self
    {
        $this->instance->setCreatedUserId($value);
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new log sms object.
     */
    public function build(): LogSms
    {
        return CoreHelper::clone($this->instance);
    }
}
