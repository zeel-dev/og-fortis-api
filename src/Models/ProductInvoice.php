<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models;

use stdClass;

/**
 * Product Invoice Information on `expand`
 */
class ProductInvoice implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $title;

    /**
     * @var array
     */
    private $quoteNumberFormat = [];

    /**
     * @var array
     */
    private $quoteNumberStart = [];

    /**
     * @var array
     */
    private $quoteNumberIncrement = [];

    /**
     * @var array
     */
    private $quoteNumberCurrent = [];

    /**
     * @var array
     */
    private $invoiceNumberFormat = [];

    /**
     * @var array
     */
    private $invoiceNumberStart = [];

    /**
     * @var array
     */
    private $invoiceNumberIncrement = [];

    /**
     * @var array
     */
    private $invoiceNumberCurrent = [];

    /**
     * @var float|null
     */
    private $taxRate;

    /**
     * @var array
     */
    private $taxFee = [];

    /**
     * @var array
     */
    private $monthlyFee = [];

    /**
     * @var int|null
     */
    private $perInvoiceFee;

    /**
     * @var int|null
     */
    private $perQuoteFee;

    /**
     * @var bool|null
     */
    private $requirePayInFull;

    /**
     * @var array
     */
    private $selectable = [];

    /**
     * @var array
     */
    private $reportable = [];

    /**
     * @var array
     */
    private $portfolioId = [];

    /**
     * @var string|null
     */
    private $locationId;

    /**
     * @var string|null
     */
    private $id;

    /**
     * @var int|null
     */
    private $createdTs;

    /**
     * @var int|null
     */
    private $modifiedTs;

    /**
     * @var array
     */
    private $createdUserId = [];

    /**
     * @var array
     */
    private $modifiedUserId = [];

    /**
     * Returns Title.
     * Title
     */
    public function getTitle(): ?string
    {
        return $this->title;
    }

    /**
     * Sets Title.
     * Title
     *
     * @maps title
     */
    public function setTitle(?string $title): void
    {
        $this->title = $title;
    }

    /**
     * Returns Quote Number Format.
     * Quote Number Format
     */
    public function getQuoteNumberFormat(): ?string
    {
        if (count($this->quoteNumberFormat) == 0) {
            return null;
        }
        return $this->quoteNumberFormat['value'];
    }

    /**
     * Sets Quote Number Format.
     * Quote Number Format
     *
     * @maps quote_number_format
     */
    public function setQuoteNumberFormat(?string $quoteNumberFormat): void
    {
        $this->quoteNumberFormat['value'] = $quoteNumberFormat;
    }

    /**
     * Unsets Quote Number Format.
     * Quote Number Format
     */
    public function unsetQuoteNumberFormat(): void
    {
        $this->quoteNumberFormat = [];
    }

    /**
     * Returns Quote Number Start.
     * Quote Number Start
     */
    public function getQuoteNumberStart(): ?float
    {
        if (count($this->quoteNumberStart) == 0) {
            return null;
        }
        return $this->quoteNumberStart['value'];
    }

    /**
     * Sets Quote Number Start.
     * Quote Number Start
     *
     * @maps quote_number_start
     */
    public function setQuoteNumberStart(?float $quoteNumberStart): void
    {
        $this->quoteNumberStart['value'] = $quoteNumberStart;
    }

    /**
     * Unsets Quote Number Start.
     * Quote Number Start
     */
    public function unsetQuoteNumberStart(): void
    {
        $this->quoteNumberStart = [];
    }

    /**
     * Returns Quote Number Increment.
     * Quote Number Increment
     */
    public function getQuoteNumberIncrement(): ?float
    {
        if (count($this->quoteNumberIncrement) == 0) {
            return null;
        }
        return $this->quoteNumberIncrement['value'];
    }

    /**
     * Sets Quote Number Increment.
     * Quote Number Increment
     *
     * @maps quote_number_increment
     */
    public function setQuoteNumberIncrement(?float $quoteNumberIncrement): void
    {
        $this->quoteNumberIncrement['value'] = $quoteNumberIncrement;
    }

    /**
     * Unsets Quote Number Increment.
     * Quote Number Increment
     */
    public function unsetQuoteNumberIncrement(): void
    {
        $this->quoteNumberIncrement = [];
    }

    /**
     * Returns Quote Number Current.
     * Quote Number Current
     */
    public function getQuoteNumberCurrent(): ?float
    {
        if (count($this->quoteNumberCurrent) == 0) {
            return null;
        }
        return $this->quoteNumberCurrent['value'];
    }

    /**
     * Sets Quote Number Current.
     * Quote Number Current
     *
     * @maps quote_number_current
     */
    public function setQuoteNumberCurrent(?float $quoteNumberCurrent): void
    {
        $this->quoteNumberCurrent['value'] = $quoteNumberCurrent;
    }

    /**
     * Unsets Quote Number Current.
     * Quote Number Current
     */
    public function unsetQuoteNumberCurrent(): void
    {
        $this->quoteNumberCurrent = [];
    }

    /**
     * Returns Invoice Number Format.
     * Invoice Number Format
     */
    public function getInvoiceNumberFormat(): ?string
    {
        if (count($this->invoiceNumberFormat) == 0) {
            return null;
        }
        return $this->invoiceNumberFormat['value'];
    }

    /**
     * Sets Invoice Number Format.
     * Invoice Number Format
     *
     * @maps invoice_number_format
     */
    public function setInvoiceNumberFormat(?string $invoiceNumberFormat): void
    {
        $this->invoiceNumberFormat['value'] = $invoiceNumberFormat;
    }

    /**
     * Unsets Invoice Number Format.
     * Invoice Number Format
     */
    public function unsetInvoiceNumberFormat(): void
    {
        $this->invoiceNumberFormat = [];
    }

    /**
     * Returns Invoice Number Start.
     * Invoice Number Start
     */
    public function getInvoiceNumberStart(): ?float
    {
        if (count($this->invoiceNumberStart) == 0) {
            return null;
        }
        return $this->invoiceNumberStart['value'];
    }

    /**
     * Sets Invoice Number Start.
     * Invoice Number Start
     *
     * @maps invoice_number_start
     */
    public function setInvoiceNumberStart(?float $invoiceNumberStart): void
    {
        $this->invoiceNumberStart['value'] = $invoiceNumberStart;
    }

    /**
     * Unsets Invoice Number Start.
     * Invoice Number Start
     */
    public function unsetInvoiceNumberStart(): void
    {
        $this->invoiceNumberStart = [];
    }

    /**
     * Returns Invoice Number Increment.
     * Invoice Number Increment
     */
    public function getInvoiceNumberIncrement(): ?float
    {
        if (count($this->invoiceNumberIncrement) == 0) {
            return null;
        }
        return $this->invoiceNumberIncrement['value'];
    }

    /**
     * Sets Invoice Number Increment.
     * Invoice Number Increment
     *
     * @maps invoice_number_increment
     */
    public function setInvoiceNumberIncrement(?float $invoiceNumberIncrement): void
    {
        $this->invoiceNumberIncrement['value'] = $invoiceNumberIncrement;
    }

    /**
     * Unsets Invoice Number Increment.
     * Invoice Number Increment
     */
    public function unsetInvoiceNumberIncrement(): void
    {
        $this->invoiceNumberIncrement = [];
    }

    /**
     * Returns Invoice Number Current.
     * Invoice Number Current
     */
    public function getInvoiceNumberCurrent(): ?float
    {
        if (count($this->invoiceNumberCurrent) == 0) {
            return null;
        }
        return $this->invoiceNumberCurrent['value'];
    }

    /**
     * Sets Invoice Number Current.
     * Invoice Number Current
     *
     * @maps invoice_number_current
     */
    public function setInvoiceNumberCurrent(?float $invoiceNumberCurrent): void
    {
        $this->invoiceNumberCurrent['value'] = $invoiceNumberCurrent;
    }

    /**
     * Unsets Invoice Number Current.
     * Invoice Number Current
     */
    public function unsetInvoiceNumberCurrent(): void
    {
        $this->invoiceNumberCurrent = [];
    }

    /**
     * Returns Tax Rate.
     * Tax Rate
     */
    public function getTaxRate(): ?float
    {
        return $this->taxRate;
    }

    /**
     * Sets Tax Rate.
     * Tax Rate
     *
     * @maps tax_rate
     */
    public function setTaxRate(?float $taxRate): void
    {
        $this->taxRate = $taxRate;
    }

    /**
     * Returns Tax Fee.
     * Tax Fee
     */
    public function getTaxFee(): ?int
    {
        if (count($this->taxFee) == 0) {
            return null;
        }
        return $this->taxFee['value'];
    }

    /**
     * Sets Tax Fee.
     * Tax Fee
     *
     * @maps tax_fee
     */
    public function setTaxFee(?int $taxFee): void
    {
        $this->taxFee['value'] = $taxFee;
    }

    /**
     * Unsets Tax Fee.
     * Tax Fee
     */
    public function unsetTaxFee(): void
    {
        $this->taxFee = [];
    }

    /**
     * Returns Monthly Fee.
     * Monthly Fees
     */
    public function getMonthlyFee(): ?int
    {
        if (count($this->monthlyFee) == 0) {
            return null;
        }
        return $this->monthlyFee['value'];
    }

    /**
     * Sets Monthly Fee.
     * Monthly Fees
     *
     * @maps monthly_fee
     */
    public function setMonthlyFee(?int $monthlyFee): void
    {
        $this->monthlyFee['value'] = $monthlyFee;
    }

    /**
     * Unsets Monthly Fee.
     * Monthly Fees
     */
    public function unsetMonthlyFee(): void
    {
        $this->monthlyFee = [];
    }

    /**
     * Returns Per Invoice Fee.
     * Per Invoice Fee
     */
    public function getPerInvoiceFee(): ?int
    {
        return $this->perInvoiceFee;
    }

    /**
     * Sets Per Invoice Fee.
     * Per Invoice Fee
     *
     * @maps per_invoice_fee
     */
    public function setPerInvoiceFee(?int $perInvoiceFee): void
    {
        $this->perInvoiceFee = $perInvoiceFee;
    }

    /**
     * Returns Per Quote Fee.
     * Per Quote fee
     */
    public function getPerQuoteFee(): ?int
    {
        return $this->perQuoteFee;
    }

    /**
     * Sets Per Quote Fee.
     * Per Quote fee
     *
     * @maps per_quote_fee
     */
    public function setPerQuoteFee(?int $perQuoteFee): void
    {
        $this->perQuoteFee = $perQuoteFee;
    }

    /**
     * Returns Require Pay in Full.
     * Require Pay In Full
     */
    public function getRequirePayInFull(): ?bool
    {
        return $this->requirePayInFull;
    }

    /**
     * Sets Require Pay in Full.
     * Require Pay In Full
     *
     * @maps require_pay_in_full
     */
    public function setRequirePayInFull(?bool $requirePayInFull): void
    {
        $this->requirePayInFull = $requirePayInFull;
    }

    /**
     * Returns Selectable.
     * Selectable
     */
    public function getSelectable(): ?float
    {
        if (count($this->selectable) == 0) {
            return null;
        }
        return $this->selectable['value'];
    }

    /**
     * Sets Selectable.
     * Selectable
     *
     * @maps selectable
     */
    public function setSelectable(?float $selectable): void
    {
        $this->selectable['value'] = $selectable;
    }

    /**
     * Unsets Selectable.
     * Selectable
     */
    public function unsetSelectable(): void
    {
        $this->selectable = [];
    }

    /**
     * Returns Reportable.
     * Reportable
     */
    public function getReportable(): ?float
    {
        if (count($this->reportable) == 0) {
            return null;
        }
        return $this->reportable['value'];
    }

    /**
     * Sets Reportable.
     * Reportable
     *
     * @maps reportable
     */
    public function setReportable(?float $reportable): void
    {
        $this->reportable['value'] = $reportable;
    }

    /**
     * Unsets Reportable.
     * Reportable
     */
    public function unsetReportable(): void
    {
        $this->reportable = [];
    }

    /**
     * Returns Portfolio Id.
     * Portfolio Id
     */
    public function getPortfolioId(): ?string
    {
        if (count($this->portfolioId) == 0) {
            return null;
        }
        return $this->portfolioId['value'];
    }

    /**
     * Sets Portfolio Id.
     * Portfolio Id
     *
     * @maps portfolio_id
     */
    public function setPortfolioId(?string $portfolioId): void
    {
        $this->portfolioId['value'] = $portfolioId;
    }

    /**
     * Unsets Portfolio Id.
     * Portfolio Id
     */
    public function unsetPortfolioId(): void
    {
        $this->portfolioId = [];
    }

    /**
     * Returns Location Id.
     * Location ID
     */
    public function getLocationId(): ?string
    {
        return $this->locationId;
    }

    /**
     * Sets Location Id.
     * Location ID
     *
     * @maps location_id
     */
    public function setLocationId(?string $locationId): void
    {
        $this->locationId = $locationId;
    }

    /**
     * Returns Id.
     * Product Invoice Id
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     * Product Invoice Id
     *
     * @maps id
     */
    public function setId(?string $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Created Ts.
     * Created Time Stamp
     */
    public function getCreatedTs(): ?int
    {
        return $this->createdTs;
    }

    /**
     * Sets Created Ts.
     * Created Time Stamp
     *
     * @maps created_ts
     */
    public function setCreatedTs(?int $createdTs): void
    {
        $this->createdTs = $createdTs;
    }

    /**
     * Returns Modified Ts.
     * Modified Time Stamp
     */
    public function getModifiedTs(): ?int
    {
        return $this->modifiedTs;
    }

    /**
     * Sets Modified Ts.
     * Modified Time Stamp
     *
     * @maps modified_ts
     */
    public function setModifiedTs(?int $modifiedTs): void
    {
        $this->modifiedTs = $modifiedTs;
    }

    /**
     * Returns Created User Id.
     * User ID Created the register
     */
    public function getCreatedUserId(): ?string
    {
        if (count($this->createdUserId) == 0) {
            return null;
        }
        return $this->createdUserId['value'];
    }

    /**
     * Sets Created User Id.
     * User ID Created the register
     *
     * @maps created_user_id
     */
    public function setCreatedUserId(?string $createdUserId): void
    {
        $this->createdUserId['value'] = $createdUserId;
    }

    /**
     * Unsets Created User Id.
     * User ID Created the register
     */
    public function unsetCreatedUserId(): void
    {
        $this->createdUserId = [];
    }

    /**
     * Returns Modified User Id.
     * Last User ID that updated the register
     */
    public function getModifiedUserId(): ?string
    {
        if (count($this->modifiedUserId) == 0) {
            return null;
        }
        return $this->modifiedUserId['value'];
    }

    /**
     * Sets Modified User Id.
     * Last User ID that updated the register
     *
     * @maps modified_user_id
     */
    public function setModifiedUserId(?string $modifiedUserId): void
    {
        $this->modifiedUserId['value'] = $modifiedUserId;
    }

    /**
     * Unsets Modified User Id.
     * Last User ID that updated the register
     */
    public function unsetModifiedUserId(): void
    {
        $this->modifiedUserId = [];
    }

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function addAdditionalProperty(string $name, $value)
    {
        $this->additionalProperties[$name] = $value;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->title)) {
            $json['title']                    = $this->title;
        }
        if (!empty($this->quoteNumberFormat)) {
            $json['quote_number_format']      = $this->quoteNumberFormat['value'];
        }
        if (!empty($this->quoteNumberStart)) {
            $json['quote_number_start']       = $this->quoteNumberStart['value'];
        }
        if (!empty($this->quoteNumberIncrement)) {
            $json['quote_number_increment']   = $this->quoteNumberIncrement['value'];
        }
        if (!empty($this->quoteNumberCurrent)) {
            $json['quote_number_current']     = $this->quoteNumberCurrent['value'];
        }
        if (!empty($this->invoiceNumberFormat)) {
            $json['invoice_number_format']    = $this->invoiceNumberFormat['value'];
        }
        if (!empty($this->invoiceNumberStart)) {
            $json['invoice_number_start']     = $this->invoiceNumberStart['value'];
        }
        if (!empty($this->invoiceNumberIncrement)) {
            $json['invoice_number_increment'] = $this->invoiceNumberIncrement['value'];
        }
        if (!empty($this->invoiceNumberCurrent)) {
            $json['invoice_number_current']   = $this->invoiceNumberCurrent['value'];
        }
        if (isset($this->taxRate)) {
            $json['tax_rate']                 = $this->taxRate;
        }
        if (!empty($this->taxFee)) {
            $json['tax_fee']                  = $this->taxFee['value'];
        }
        if (!empty($this->monthlyFee)) {
            $json['monthly_fee']              = $this->monthlyFee['value'];
        }
        if (isset($this->perInvoiceFee)) {
            $json['per_invoice_fee']          = $this->perInvoiceFee;
        }
        if (isset($this->perQuoteFee)) {
            $json['per_quote_fee']            = $this->perQuoteFee;
        }
        if (isset($this->requirePayInFull)) {
            $json['require_pay_in_full']      = $this->requirePayInFull;
        }
        if (!empty($this->selectable)) {
            $json['selectable']               = $this->selectable['value'];
        }
        if (!empty($this->reportable)) {
            $json['reportable']               = $this->reportable['value'];
        }
        if (!empty($this->portfolioId)) {
            $json['portfolio_id']             = $this->portfolioId['value'];
        }
        if (isset($this->locationId)) {
            $json['location_id']              = $this->locationId;
        }
        if (isset($this->id)) {
            $json['id']                       = $this->id;
        }
        if (isset($this->createdTs)) {
            $json['created_ts']               = $this->createdTs;
        }
        if (isset($this->modifiedTs)) {
            $json['modified_ts']              = $this->modifiedTs;
        }
        if (!empty($this->createdUserId)) {
            $json['created_user_id']          = $this->createdUserId['value'];
        }
        if (!empty($this->modifiedUserId)) {
            $json['modified_user_id']         = $this->modifiedUserId['value'];
        }
        $json = array_merge($json, $this->additionalProperties);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
