<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models;

use stdClass;

class LocationBillingAccount implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $title;

    /**
     * @var array
     */
    private $locationId = [];

    /**
     * @var array
     */
    private $locationApiId = [];

    /**
     * @var array
     */
    private $achSecCode = [];

    /**
     * @var array
     */
    private $accountNumber = [];

    /**
     * @var array
     */
    private $routing = [];

    /**
     * @var array
     */
    private $expDate = [];

    /**
     * @var array
     */
    private $billingZip = [];

    /**
     * @var array
     */
    private $accountType = [];

    /**
     * @var array
     */
    private $accountHolderName = [];

    /**
     * @var string|null
     */
    private $id;

    /**
     * @var int|null
     */
    private $createdTs;

    /**
     * @var int|null
     */
    private $modifiedTs;

    /**
     * @var array
     */
    private $createdUserId = [];

    /**
     * @var array
     */
    private $modifiedUserId = [];

    /**
     * @var array
     */
    private $billingDescriptor = [];

    /**
     * @var array
     */
    private $paymentMethod = [];

    /**
     * @var string|null
     */
    private $portfolioId;

    /**
     * Returns Title.
     * Title
     */
    public function getTitle(): ?string
    {
        return $this->title;
    }

    /**
     * Sets Title.
     * Title
     *
     * @maps title
     */
    public function setTitle(?string $title): void
    {
        $this->title = $title;
    }

    /**
     * Returns Location Id.
     * Location ID
     */
    public function getLocationId(): ?string
    {
        if (count($this->locationId) == 0) {
            return null;
        }
        return $this->locationId['value'];
    }

    /**
     * Sets Location Id.
     * Location ID
     *
     * @maps location_id
     */
    public function setLocationId(?string $locationId): void
    {
        $this->locationId['value'] = $locationId;
    }

    /**
     * Unsets Location Id.
     * Location ID
     */
    public function unsetLocationId(): void
    {
        $this->locationId = [];
    }

    /**
     * Returns Location Api Id.
     * Location Api Id
     */
    public function getLocationApiId(): ?string
    {
        if (count($this->locationApiId) == 0) {
            return null;
        }
        return $this->locationApiId['value'];
    }

    /**
     * Sets Location Api Id.
     * Location Api Id
     *
     * @maps location_api_id
     */
    public function setLocationApiId(?string $locationApiId): void
    {
        $this->locationApiId['value'] = $locationApiId;
    }

    /**
     * Unsets Location Api Id.
     * Location Api Id
     */
    public function unsetLocationApiId(): void
    {
        $this->locationApiId = [];
    }

    /**
     * Returns Ach Sec Code.
     * Ach Sec Code
     */
    public function getAchSecCode(): ?string
    {
        if (count($this->achSecCode) == 0) {
            return null;
        }
        return $this->achSecCode['value'];
    }

    /**
     * Sets Ach Sec Code.
     * Ach Sec Code
     *
     * @maps ach_sec_code
     */
    public function setAchSecCode(?string $achSecCode): void
    {
        $this->achSecCode['value'] = $achSecCode;
    }

    /**
     * Unsets Ach Sec Code.
     * Ach Sec Code
     */
    public function unsetAchSecCode(): void
    {
        $this->achSecCode = [];
    }

    /**
     * Returns Account Number.
     * Account number
     */
    public function getAccountNumber(): ?string
    {
        if (count($this->accountNumber) == 0) {
            return null;
        }
        return $this->accountNumber['value'];
    }

    /**
     * Sets Account Number.
     * Account number
     *
     * @maps account_number
     */
    public function setAccountNumber(?string $accountNumber): void
    {
        $this->accountNumber['value'] = $accountNumber;
    }

    /**
     * Unsets Account Number.
     * Account number
     */
    public function unsetAccountNumber(): void
    {
        $this->accountNumber = [];
    }

    /**
     * Returns Routing.
     * Routing
     */
    public function getRouting(): ?string
    {
        if (count($this->routing) == 0) {
            return null;
        }
        return $this->routing['value'];
    }

    /**
     * Sets Routing.
     * Routing
     *
     * @maps routing
     */
    public function setRouting(?string $routing): void
    {
        $this->routing['value'] = $routing;
    }

    /**
     * Unsets Routing.
     * Routing
     */
    public function unsetRouting(): void
    {
        $this->routing = [];
    }

    /**
     * Returns Exp Date.
     * Exp Date
     */
    public function getExpDate(): ?string
    {
        if (count($this->expDate) == 0) {
            return null;
        }
        return $this->expDate['value'];
    }

    /**
     * Sets Exp Date.
     * Exp Date
     *
     * @maps exp_date
     */
    public function setExpDate(?string $expDate): void
    {
        $this->expDate['value'] = $expDate;
    }

    /**
     * Unsets Exp Date.
     * Exp Date
     */
    public function unsetExpDate(): void
    {
        $this->expDate = [];
    }

    /**
     * Returns Billing Zip.
     * Billing Zip
     */
    public function getBillingZip(): ?string
    {
        if (count($this->billingZip) == 0) {
            return null;
        }
        return $this->billingZip['value'];
    }

    /**
     * Sets Billing Zip.
     * Billing Zip
     *
     * @maps billing_zip
     */
    public function setBillingZip(?string $billingZip): void
    {
        $this->billingZip['value'] = $billingZip;
    }

    /**
     * Unsets Billing Zip.
     * Billing Zip
     */
    public function unsetBillingZip(): void
    {
        $this->billingZip = [];
    }

    /**
     * Returns Account Type.
     * Account Type
     */
    public function getAccountType(): ?string
    {
        if (count($this->accountType) == 0) {
            return null;
        }
        return $this->accountType['value'];
    }

    /**
     * Sets Account Type.
     * Account Type
     *
     * @maps account_type
     */
    public function setAccountType(?string $accountType): void
    {
        $this->accountType['value'] = $accountType;
    }

    /**
     * Unsets Account Type.
     * Account Type
     */
    public function unsetAccountType(): void
    {
        $this->accountType = [];
    }

    /**
     * Returns Account Holder Name.
     * Account Holder Name
     */
    public function getAccountHolderName(): ?string
    {
        if (count($this->accountHolderName) == 0) {
            return null;
        }
        return $this->accountHolderName['value'];
    }

    /**
     * Sets Account Holder Name.
     * Account Holder Name
     *
     * @maps account_holder_name
     */
    public function setAccountHolderName(?string $accountHolderName): void
    {
        $this->accountHolderName['value'] = $accountHolderName;
    }

    /**
     * Unsets Account Holder Name.
     * Account Holder Name
     */
    public function unsetAccountHolderName(): void
    {
        $this->accountHolderName = [];
    }

    /**
     * Returns Id.
     * Location Billing Account Id
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     * Location Billing Account Id
     *
     * @maps id
     */
    public function setId(?string $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Created Ts.
     * Created Time Stamp
     */
    public function getCreatedTs(): ?int
    {
        return $this->createdTs;
    }

    /**
     * Sets Created Ts.
     * Created Time Stamp
     *
     * @maps created_ts
     */
    public function setCreatedTs(?int $createdTs): void
    {
        $this->createdTs = $createdTs;
    }

    /**
     * Returns Modified Ts.
     * Modified Time Stamp
     */
    public function getModifiedTs(): ?int
    {
        return $this->modifiedTs;
    }

    /**
     * Sets Modified Ts.
     * Modified Time Stamp
     *
     * @maps modified_ts
     */
    public function setModifiedTs(?int $modifiedTs): void
    {
        $this->modifiedTs = $modifiedTs;
    }

    /**
     * Returns Created User Id.
     * Created User Id
     */
    public function getCreatedUserId(): ?string
    {
        if (count($this->createdUserId) == 0) {
            return null;
        }
        return $this->createdUserId['value'];
    }

    /**
     * Sets Created User Id.
     * Created User Id
     *
     * @maps created_user_id
     */
    public function setCreatedUserId(?string $createdUserId): void
    {
        $this->createdUserId['value'] = $createdUserId;
    }

    /**
     * Unsets Created User Id.
     * Created User Id
     */
    public function unsetCreatedUserId(): void
    {
        $this->createdUserId = [];
    }

    /**
     * Returns Modified User Id.
     * Modified User Id
     */
    public function getModifiedUserId(): ?string
    {
        if (count($this->modifiedUserId) == 0) {
            return null;
        }
        return $this->modifiedUserId['value'];
    }

    /**
     * Sets Modified User Id.
     * Modified User Id
     *
     * @maps modified_user_id
     */
    public function setModifiedUserId(?string $modifiedUserId): void
    {
        $this->modifiedUserId['value'] = $modifiedUserId;
    }

    /**
     * Unsets Modified User Id.
     * Modified User Id
     */
    public function unsetModifiedUserId(): void
    {
        $this->modifiedUserId = [];
    }

    /**
     * Returns Billing Descriptor.
     * Billing Descriptor
     */
    public function getBillingDescriptor(): ?string
    {
        if (count($this->billingDescriptor) == 0) {
            return null;
        }
        return $this->billingDescriptor['value'];
    }

    /**
     * Sets Billing Descriptor.
     * Billing Descriptor
     *
     * @maps billing_descriptor
     */
    public function setBillingDescriptor(?string $billingDescriptor): void
    {
        $this->billingDescriptor['value'] = $billingDescriptor;
    }

    /**
     * Unsets Billing Descriptor.
     * Billing Descriptor
     */
    public function unsetBillingDescriptor(): void
    {
        $this->billingDescriptor = [];
    }

    /**
     * Returns Payment Method.
     * Billing Descriptor
     */
    public function getPaymentMethod(): ?string
    {
        if (count($this->paymentMethod) == 0) {
            return null;
        }
        return $this->paymentMethod['value'];
    }

    /**
     * Sets Payment Method.
     * Billing Descriptor
     *
     * @maps payment_method
     */
    public function setPaymentMethod(?string $paymentMethod): void
    {
        $this->paymentMethod['value'] = $paymentMethod;
    }

    /**
     * Unsets Payment Method.
     * Billing Descriptor
     */
    public function unsetPaymentMethod(): void
    {
        $this->paymentMethod = [];
    }

    /**
     * Returns Portfolio Id.
     * Portfolio Id
     */
    public function getPortfolioId(): ?string
    {
        return $this->portfolioId;
    }

    /**
     * Sets Portfolio Id.
     * Portfolio Id
     *
     * @maps portfolio_id
     */
    public function setPortfolioId(?string $portfolioId): void
    {
        $this->portfolioId = $portfolioId;
    }

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function addAdditionalProperty(string $name, $value)
    {
        $this->additionalProperties[$name] = $value;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->title)) {
            $json['title']               = $this->title;
        }
        if (!empty($this->locationId)) {
            $json['location_id']         = $this->locationId['value'];
        }
        if (!empty($this->locationApiId)) {
            $json['location_api_id']     = $this->locationApiId['value'];
        }
        if (!empty($this->achSecCode)) {
            $json['ach_sec_code']        = $this->achSecCode['value'];
        }
        if (!empty($this->accountNumber)) {
            $json['account_number']      = $this->accountNumber['value'];
        }
        if (!empty($this->routing)) {
            $json['routing']             = $this->routing['value'];
        }
        if (!empty($this->expDate)) {
            $json['exp_date']            = $this->expDate['value'];
        }
        if (!empty($this->billingZip)) {
            $json['billing_zip']         = $this->billingZip['value'];
        }
        if (!empty($this->accountType)) {
            $json['account_type']        = $this->accountType['value'];
        }
        if (!empty($this->accountHolderName)) {
            $json['account_holder_name'] = $this->accountHolderName['value'];
        }
        if (isset($this->id)) {
            $json['id']                  = $this->id;
        }
        if (isset($this->createdTs)) {
            $json['created_ts']          = $this->createdTs;
        }
        if (isset($this->modifiedTs)) {
            $json['modified_ts']         = $this->modifiedTs;
        }
        if (!empty($this->createdUserId)) {
            $json['created_user_id']     = $this->createdUserId['value'];
        }
        if (!empty($this->modifiedUserId)) {
            $json['modified_user_id']    = $this->modifiedUserId['value'];
        }
        if (!empty($this->billingDescriptor)) {
            $json['billing_descriptor']  = $this->billingDescriptor['value'];
        }
        if (!empty($this->paymentMethod)) {
            $json['payment_method']      = $this->paymentMethod['value'];
        }
        if (isset($this->portfolioId)) {
            $json['portfolio_id']        = $this->portfolioId;
        }
        $json = array_merge($json, $this->additionalProperties);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
