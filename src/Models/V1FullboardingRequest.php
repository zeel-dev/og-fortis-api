<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models;

use stdClass;

class V1FullboardingRequest implements \JsonSerializable
{
    /**
     * @var array
     */
    private $parentId = [];

    /**
     * @var string|null
     */
    private $templateId;

    /**
     * @var array
     */
    private $clientAppId = [];

    /**
     * @var string
     */
    private $email;

    /**
     * @var string
     */
    private $dbaName;

    /**
     * @var array
     */
    private $legalName = [];

    /**
     * @var array
     */
    private $website = [];

    /**
     * @var string
     */
    private $phoneNumber;

    /**
     * @var string
     */
    private $ownershipType;

    /**
     * @var string
     */
    private $fedTaxId;

    /**
     * @var int
     */
    private $averageTicket;

    /**
     * @var int
     */
    private $highTicket;

    /**
     * @var int
     */
    private $ccMonthlyVolume;

    /**
     * @var array
     */
    private $ecMonthlyVolume = [];

    /**
     * @var string
     */
    private $mccCode;

    /**
     * @var string
     */
    private $businessDescription;

    /**
     * @var int
     */
    private $swipedPercent;

    /**
     * @var int
     */
    private $keyedPercent;

    /**
     * @var int
     */
    private $ecommercePercent;

    /**
     * @var bool
     */
    private $isForeignEntity;

    /**
     * @var bool
     */
    private $personallyGuaranteed;

    /**
     * @var array
     */
    private $preferredLanguage = [];

    /**
     * @var Address79[]
     */
    private $addresses;

    /**
     * @var Owner[]
     */
    private $owners;

    /**
     * @var BankAccount1[]
     */
    private $bankAccounts;

    /**
     * @var Document[]|null
     */
    private $documents;

    /**
     * @var PricingElement[]|null
     */
    private $pricingElements;

    /**
     * @var KycResponseObject[]|null
     */
    private $kycResponseObjects;

    /**
     * @var array|null
     */
    private $metadata;

    /**
     * @var array
     */
    private $signerIp = [];

    /**
     * @param string $email
     * @param string $dbaName
     * @param string $phoneNumber
     * @param string $ownershipType
     * @param string $fedTaxId
     * @param int $averageTicket
     * @param int $highTicket
     * @param int $ccMonthlyVolume
     * @param string $mccCode
     * @param string $businessDescription
     * @param int $swipedPercent
     * @param int $keyedPercent
     * @param int $ecommercePercent
     * @param bool $isForeignEntity
     * @param bool $personallyGuaranteed
     * @param Address79[] $addresses
     * @param Owner[] $owners
     * @param BankAccount1[] $bankAccounts
     */
    public function __construct(
        string $email,
        string $dbaName,
        string $phoneNumber,
        string $ownershipType,
        string $fedTaxId,
        int $averageTicket,
        int $highTicket,
        int $ccMonthlyVolume,
        string $mccCode,
        string $businessDescription,
        int $swipedPercent,
        int $keyedPercent,
        int $ecommercePercent,
        bool $isForeignEntity,
        bool $personallyGuaranteed,
        array $addresses,
        array $owners,
        array $bankAccounts
    ) {
        $this->email = $email;
        $this->dbaName = $dbaName;
        $this->phoneNumber = $phoneNumber;
        $this->ownershipType = $ownershipType;
        $this->fedTaxId = $fedTaxId;
        $this->averageTicket = $averageTicket;
        $this->highTicket = $highTicket;
        $this->ccMonthlyVolume = $ccMonthlyVolume;
        $this->mccCode = $mccCode;
        $this->businessDescription = $businessDescription;
        $this->swipedPercent = $swipedPercent;
        $this->keyedPercent = $keyedPercent;
        $this->ecommercePercent = $ecommercePercent;
        $this->isForeignEntity = $isForeignEntity;
        $this->personallyGuaranteed = $personallyGuaranteed;
        $this->addresses = $addresses;
        $this->owners = $owners;
        $this->bankAccounts = $bankAccounts;
    }

    /**
     * Returns Parent Id.
     * Location ID
     */
    public function getParentId(): ?string
    {
        if (count($this->parentId) == 0) {
            return null;
        }
        return $this->parentId['value'];
    }

    /**
     * Sets Parent Id.
     * Location ID
     *
     * @maps parent_id
     */
    public function setParentId(?string $parentId): void
    {
        $this->parentId['value'] = $parentId;
    }

    /**
     * Unsets Parent Id.
     * Location ID
     */
    public function unsetParentId(): void
    {
        $this->parentId = [];
    }

    /**
     * Returns Template Id.
     * The ID of the template to be used - this value will be provided by Fortis.
     */
    public function getTemplateId(): ?string
    {
        return $this->templateId;
    }

    /**
     * Sets Template Id.
     * The ID of the template to be used - this value will be provided by Fortis.
     *
     * @maps template_id
     */
    public function setTemplateId(?string $templateId): void
    {
        $this->templateId = $templateId;
    }

    /**
     * Returns Client App Id.
     * Client Issues Id to track that can be used to track each submitted merchant application. This id
     * should be generated and sent in the request payload, and will be returned in the response payload.
     * If no id is submitted in the payload request, this field will be null in the response.
     */
    public function getClientAppId(): ?string
    {
        if (count($this->clientAppId) == 0) {
            return null;
        }
        return $this->clientAppId['value'];
    }

    /**
     * Sets Client App Id.
     * Client Issues Id to track that can be used to track each submitted merchant application. This id
     * should be generated and sent in the request payload, and will be returned in the response payload.
     * If no id is submitted in the payload request, this field will be null in the response.
     *
     * @maps client_app_id
     */
    public function setClientAppId(?string $clientAppId): void
    {
        $this->clientAppId['value'] = $clientAppId;
    }

    /**
     * Unsets Client App Id.
     * Client Issues Id to track that can be used to track each submitted merchant application. This id
     * should be generated and sent in the request payload, and will be returned in the response payload.
     * If no id is submitted in the payload request, this field will be null in the response.
     */
    public function unsetClientAppId(): void
    {
        $this->clientAppId = [];
    }

    /**
     * Returns Email.
     * Merchant email address.
     */
    public function getEmail(): string
    {
        return $this->email;
    }

    /**
     * Sets Email.
     * Merchant email address.
     *
     * @required
     * @maps email
     */
    public function setEmail(string $email): void
    {
        $this->email = $email;
    }

    /**
     * Returns Dba Name.
     * Merchant 'Doing Business As' name.
     */
    public function getDbaName(): string
    {
        return $this->dbaName;
    }

    /**
     * Sets Dba Name.
     * Merchant 'Doing Business As' name.
     *
     * @required
     * @maps dba_name
     */
    public function setDbaName(string $dbaName): void
    {
        $this->dbaName = $dbaName;
    }

    /**
     * Returns Legal Name.
     * Merchant legal name.
     */
    public function getLegalName(): ?string
    {
        if (count($this->legalName) == 0) {
            return null;
        }
        return $this->legalName['value'];
    }

    /**
     * Sets Legal Name.
     * Merchant legal name.
     *
     * @maps legal_name
     */
    public function setLegalName(?string $legalName): void
    {
        $this->legalName['value'] = $legalName;
    }

    /**
     * Unsets Legal Name.
     * Merchant legal name.
     */
    public function unsetLegalName(): void
    {
        $this->legalName = [];
    }

    /**
     * Returns Website.
     * Merchant's business website.
     */
    public function getWebsite(): ?string
    {
        if (count($this->website) == 0) {
            return null;
        }
        return $this->website['value'];
    }

    /**
     * Sets Website.
     * Merchant's business website.
     *
     * @maps website
     */
    public function setWebsite(?string $website): void
    {
        $this->website['value'] = $website;
    }

    /**
     * Unsets Website.
     * Merchant's business website.
     */
    public function unsetWebsite(): void
    {
        $this->website = [];
    }

    /**
     * Returns Phone Number.
     * Merchant's phone number.
     */
    public function getPhoneNumber(): string
    {
        return $this->phoneNumber;
    }

    /**
     * Sets Phone Number.
     * Merchant's phone number.
     *
     * @required
     * @maps phone_number
     */
    public function setPhoneNumber(string $phoneNumber): void
    {
        $this->phoneNumber = $phoneNumber;
    }

    /**
     * Returns Ownership Type.
     * The Ownership Type of the merchant's business.
     */
    public function getOwnershipType(): string
    {
        return $this->ownershipType;
    }

    /**
     * Sets Ownership Type.
     * The Ownership Type of the merchant's business.
     *
     * @required
     * @maps ownership_type
     * @factory \FortisAPILib\Models\OwnershipTypeEnum::checkValue
     */
    public function setOwnershipType(string $ownershipType): void
    {
        $this->ownershipType = $ownershipType;
    }

    /**
     * Returns Fed Tax Id.
     * Federal Tax ID (EIN).
     */
    public function getFedTaxId(): string
    {
        return $this->fedTaxId;
    }

    /**
     * Sets Fed Tax Id.
     * Federal Tax ID (EIN).
     *
     * @required
     * @maps fed_tax_id
     */
    public function setFedTaxId(string $fedTaxId): void
    {
        $this->fedTaxId = $fedTaxId;
    }

    /**
     * Returns Average Ticket.
     * Average Transaction Amount.
     */
    public function getAverageTicket(): int
    {
        return $this->averageTicket;
    }

    /**
     * Sets Average Ticket.
     * Average Transaction Amount.
     *
     * @required
     * @maps average_ticket
     */
    public function setAverageTicket(int $averageTicket): void
    {
        $this->averageTicket = $averageTicket;
    }

    /**
     * Returns High Ticket.
     * Highest transaction amount rounded to the next dollar
     */
    public function getHighTicket(): int
    {
        return $this->highTicket;
    }

    /**
     * Sets High Ticket.
     * Highest transaction amount rounded to the next dollar
     *
     * @required
     * @maps high_ticket
     */
    public function setHighTicket(int $highTicket): void
    {
        $this->highTicket = $highTicket;
    }

    /**
     * Returns Cc Monthly Volume.
     * Average monthly credit card volume rounded to the next dollar.
     */
    public function getCcMonthlyVolume(): int
    {
        return $this->ccMonthlyVolume;
    }

    /**
     * Sets Cc Monthly Volume.
     * Average monthly credit card volume rounded to the next dollar.
     *
     * @required
     * @maps cc_monthly_volume
     */
    public function setCcMonthlyVolume(int $ccMonthlyVolume): void
    {
        $this->ccMonthlyVolume = $ccMonthlyVolume;
    }

    /**
     * Returns Ec Monthly Volume.
     * Average monthly echeck volume rounded to the next dollar.
     */
    public function getEcMonthlyVolume(): ?int
    {
        if (count($this->ecMonthlyVolume) == 0) {
            return null;
        }
        return $this->ecMonthlyVolume['value'];
    }

    /**
     * Sets Ec Monthly Volume.
     * Average monthly echeck volume rounded to the next dollar.
     *
     * @maps ec_monthly_volume
     */
    public function setEcMonthlyVolume(?int $ecMonthlyVolume): void
    {
        $this->ecMonthlyVolume['value'] = $ecMonthlyVolume;
    }

    /**
     * Unsets Ec Monthly Volume.
     * Average monthly echeck volume rounded to the next dollar.
     */
    public function unsetEcMonthlyVolume(): void
    {
        $this->ecMonthlyVolume = [];
    }

    /**
     * Returns Mcc Code.
     * Merchant's MCC code.
     */
    public function getMccCode(): string
    {
        return $this->mccCode;
    }

    /**
     * Sets Mcc Code.
     * Merchant's MCC code.
     *
     * @required
     * @maps mcc_code
     */
    public function setMccCode(string $mccCode): void
    {
        $this->mccCode = $mccCode;
    }

    /**
     * Returns Business Description.
     * Description of Goods or Services.
     */
    public function getBusinessDescription(): string
    {
        return $this->businessDescription;
    }

    /**
     * Sets Business Description.
     * Description of Goods or Services.
     *
     * @required
     * @maps business_description
     */
    public function setBusinessDescription(string $businessDescription): void
    {
        $this->businessDescription = $businessDescription;
    }

    /**
     * Returns Swiped Percent.
     * Card present/swiped percentage
     */
    public function getSwipedPercent(): int
    {
        return $this->swipedPercent;
    }

    /**
     * Sets Swiped Percent.
     * Card present/swiped percentage
     *
     * @required
     * @maps swiped_percent
     */
    public function setSwipedPercent(int $swipedPercent): void
    {
        $this->swipedPercent = $swipedPercent;
    }

    /**
     * Returns Keyed Percent.
     * Card not present/keyed percentage
     */
    public function getKeyedPercent(): int
    {
        return $this->keyedPercent;
    }

    /**
     * Sets Keyed Percent.
     * Card not present/keyed percentage
     *
     * @required
     * @maps keyed_percent
     */
    public function setKeyedPercent(int $keyedPercent): void
    {
        $this->keyedPercent = $keyedPercent;
    }

    /**
     * Returns Ecommerce Percent.
     * eCommerce percentage.
     */
    public function getEcommercePercent(): int
    {
        return $this->ecommercePercent;
    }

    /**
     * Sets Ecommerce Percent.
     * eCommerce percentage.
     *
     * @required
     * @maps ecommerce_percent
     */
    public function setEcommercePercent(int $ecommercePercent): void
    {
        $this->ecommercePercent = $ecommercePercent;
    }

    /**
     * Returns Is Foreign Entity.
     * Indicates whether or not the merchant is a foreign entity.
     */
    public function getIsForeignEntity(): bool
    {
        return $this->isForeignEntity;
    }

    /**
     * Sets Is Foreign Entity.
     * Indicates whether or not the merchant is a foreign entity.
     *
     * @required
     * @maps is_foreign_entity
     */
    public function setIsForeignEntity(bool $isForeignEntity): void
    {
        $this->isForeignEntity = $isForeignEntity;
    }

    /**
     * Returns Personally Guaranteed.
     * Indicates whether or not the merchant is personally guaranteed.
     */
    public function getPersonallyGuaranteed(): bool
    {
        return $this->personallyGuaranteed;
    }

    /**
     * Sets Personally Guaranteed.
     * Indicates whether or not the merchant is personally guaranteed.
     *
     * @required
     * @maps personally_guaranteed
     */
    public function setPersonallyGuaranteed(bool $personallyGuaranteed): void
    {
        $this->personallyGuaranteed = $personallyGuaranteed;
    }

    /**
     * Returns Preferred Language.
     * Merchant preferred language. English(“en-US”) will be used if no value is supplied.
     */
    public function getPreferredLanguage(): ?string
    {
        if (count($this->preferredLanguage) == 0) {
            return null;
        }
        return $this->preferredLanguage['value'];
    }

    /**
     * Sets Preferred Language.
     * Merchant preferred language. English(“en-US”) will be used if no value is supplied.
     *
     * @maps preferred_language
     * @factory \FortisAPILib\Models\PreferredLanguageEnum::checkValue
     */
    public function setPreferredLanguage(?string $preferredLanguage): void
    {
        $this->preferredLanguage['value'] = $preferredLanguage;
    }

    /**
     * Unsets Preferred Language.
     * Merchant preferred language. English(“en-US”) will be used if no value is supplied.
     */
    public function unsetPreferredLanguage(): void
    {
        $this->preferredLanguage = [];
    }

    /**
     * Returns Addresses.
     *
     * @return Address79[]
     */
    public function getAddresses(): array
    {
        return $this->addresses;
    }

    /**
     * Sets Addresses.
     *
     * @required
     * @maps addresses
     *
     * @param Address79[] $addresses
     */
    public function setAddresses(array $addresses): void
    {
        $this->addresses = $addresses;
    }

    /**
     * Returns Owners.
     *
     * @return Owner[]
     */
    public function getOwners(): array
    {
        return $this->owners;
    }

    /**
     * Sets Owners.
     *
     * @required
     * @maps owners
     *
     * @param Owner[] $owners
     */
    public function setOwners(array $owners): void
    {
        $this->owners = $owners;
    }

    /**
     * Returns Bank Accounts.
     *
     * @return BankAccount1[]
     */
    public function getBankAccounts(): array
    {
        return $this->bankAccounts;
    }

    /**
     * Sets Bank Accounts.
     *
     * @required
     * @maps bank_accounts
     *
     * @param BankAccount1[] $bankAccounts
     */
    public function setBankAccounts(array $bankAccounts): void
    {
        $this->bankAccounts = $bankAccounts;
    }

    /**
     * Returns Documents.
     *
     * @return Document[]|null
     */
    public function getDocuments(): ?array
    {
        return $this->documents;
    }

    /**
     * Sets Documents.
     *
     * @maps documents
     *
     * @param Document[]|null $documents
     */
    public function setDocuments(?array $documents): void
    {
        $this->documents = $documents;
    }

    /**
     * Returns Pricing Elements.
     *
     * @return PricingElement[]|null
     */
    public function getPricingElements(): ?array
    {
        return $this->pricingElements;
    }

    /**
     * Sets Pricing Elements.
     *
     * @maps pricing_elements
     *
     * @param PricingElement[]|null $pricingElements
     */
    public function setPricingElements(?array $pricingElements): void
    {
        $this->pricingElements = $pricingElements;
    }

    /**
     * Returns Kyc Response Objects.
     *
     * @return KycResponseObject[]|null
     */
    public function getKycResponseObjects(): ?array
    {
        return $this->kycResponseObjects;
    }

    /**
     * Sets Kyc Response Objects.
     *
     * @maps kyc_response_objects
     *
     * @param KycResponseObject[]|null $kycResponseObjects
     */
    public function setKycResponseObjects(?array $kycResponseObjects): void
    {
        $this->kycResponseObjects = $kycResponseObjects;
    }

    /**
     * Returns Metadata.
     * Valid JSON of metadata related to merchant.
     */
    public function getMetadata(): ?array
    {
        return $this->metadata;
    }

    /**
     * Sets Metadata.
     * Valid JSON of metadata related to merchant.
     *
     * @maps metadata
     */
    public function setMetadata(?array $metadata): void
    {
        $this->metadata = $metadata;
    }

    /**
     * Returns Signer Ip.
     * Signer IP address.
     */
    public function getSignerIp(): ?string
    {
        if (count($this->signerIp) == 0) {
            return null;
        }
        return $this->signerIp['value'];
    }

    /**
     * Sets Signer Ip.
     * Signer IP address.
     *
     * @maps signer_ip
     */
    public function setSignerIp(?string $signerIp): void
    {
        $this->signerIp['value'] = $signerIp;
    }

    /**
     * Unsets Signer Ip.
     * Signer IP address.
     */
    public function unsetSignerIp(): void
    {
        $this->signerIp = [];
    }

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function addAdditionalProperty(string $name, $value)
    {
        $this->additionalProperties[$name] = $value;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (!empty($this->parentId)) {
            $json['parent_id']            = $this->parentId['value'];
        }
        if (isset($this->templateId)) {
            $json['template_id']          = $this->templateId;
        }
        if (!empty($this->clientAppId)) {
            $json['client_app_id']        = $this->clientAppId['value'];
        }
        $json['email']                    = $this->email;
        $json['dba_name']                 = $this->dbaName;
        if (!empty($this->legalName)) {
            $json['legal_name']           = $this->legalName['value'];
        }
        if (!empty($this->website)) {
            $json['website']              = $this->website['value'];
        }
        $json['phone_number']             = $this->phoneNumber;
        $json['ownership_type']           = OwnershipTypeEnum::checkValue($this->ownershipType);
        $json['fed_tax_id']               = $this->fedTaxId;
        $json['average_ticket']           = $this->averageTicket;
        $json['high_ticket']              = $this->highTicket;
        $json['cc_monthly_volume']        = $this->ccMonthlyVolume;
        if (!empty($this->ecMonthlyVolume)) {
            $json['ec_monthly_volume']    = $this->ecMonthlyVolume['value'];
        }
        $json['mcc_code']                 = $this->mccCode;
        $json['business_description']     = $this->businessDescription;
        $json['swiped_percent']           = $this->swipedPercent;
        $json['keyed_percent']            = $this->keyedPercent;
        $json['ecommerce_percent']        = $this->ecommercePercent;
        $json['is_foreign_entity']        = $this->isForeignEntity;
        $json['personally_guaranteed']    = $this->personallyGuaranteed;
        if (!empty($this->preferredLanguage)) {
            $json['preferred_language']   = PreferredLanguageEnum::checkValue($this->preferredLanguage['value']);
        }
        $json['addresses']                = $this->addresses;
        $json['owners']                   = $this->owners;
        $json['bank_accounts']            = $this->bankAccounts;
        if (isset($this->documents)) {
            $json['documents']            = $this->documents;
        }
        if (isset($this->pricingElements)) {
            $json['pricing_elements']     = $this->pricingElements;
        }
        if (isset($this->kycResponseObjects)) {
            $json['kyc_response_objects'] = $this->kycResponseObjects;
        }
        if (isset($this->metadata)) {
            $json['metadata']             = $this->metadata;
        }
        if (!empty($this->signerIp)) {
            $json['signer_ip']            = $this->signerIp['value'];
        }
        $json = array_merge($json, $this->additionalProperties);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
