<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models;

use Core\Utils\CoreHelper;
use Exception;
use stdClass;

class Field32Enum
{
    public const ID = 'id';

    public const CREATED_TS = 'created_ts';

    public const MODIFIED_TS = 'modified_ts';

    public const ACCOUNT_NUMBER = 'account_number';

    public const ADDRESS = 'address';

    public const BRANDING_DOMAIN_ID = 'branding_domain_id';

    public const CONTACT_EMAIL_TRX_RECEIPT_DEFAULT = 'contact_email_trx_receipt_default';

    public const DEFAULT_ACH = 'default_ach';

    public const DEFAULT_CC = 'default_cc';

    public const EMAIL_REPLY_TO = 'email_reply_to';

    public const FAX = 'fax';

    public const LOCATION_API_ID = 'location_api_id';

    public const LOCATION_API_KEY = 'location_api_key';

    public const LOCATION_C1 = 'location_c1';

    public const LOCATION_C2 = 'location_c2';

    public const LOCATION_C3 = 'location_c3';

    public const NAME = 'name';

    public const OFFICE_PHONE = 'office_phone';

    public const OFFICE_EXT_PHONE = 'office_ext_phone';

    public const TZ = 'tz';

    public const PARENT_ID = 'parent_id';

    public const SHOW_CONTACT_NOTES = 'show_contact_notes';

    public const SHOW_CONTACT_FILES = 'show_contact_files';

    public const CREATED_USER_ID = 'created_user_id';

    public const LOCATION_TYPE = 'location_type';

    public const BRANDING_DOMAIN_URL = 'branding_domain_url';

    public const BRANDING_DOMAIN = 'branding_domain';

    public const PRODUCT_TRANSACTIONS = 'product_transactions';

    public const PRODUCT_FILE = 'product_file';

    public const PRODUCT_ACCOUNTVAULT = 'product_accountvault';

    public const PRODUCT_RECURRING = 'product_recurring';

    public const TAGS = 'tags';

    public const TERMINALS = 'terminals';

    public const RELATIONSHIP = 'relationship';

    public const USERS = 'users';

    public const IS_DELETABLE = 'is_deletable';

    public const PRODUCT_INVOICE = 'product_invoice';

    public const PRODUCT_FILES = 'product_files';

    public const PARENT_ = 'parent';

    public const CREATED_USER = 'created_user';

    public const CHANGELOGS = 'changelogs';

    public const TERMINAL_ROUTERS = 'terminal_routers';

    public const DEVELOPER_COMPANY = 'developer_company';

    public const DEVELOPER_COMPANY_ID = 'developer_company_id';

    public const HELPPAGES = 'helppages';

    public const QUICK_INVOICE_SETTING = 'quick_invoice_setting';

    public const LOCATION_BILLING_ACCOUNTS = 'location_billing_accounts';

    public const MARKETPLACES = 'marketplaces';

    public const LOCATIONMARKETPLACES = 'locationmarketplaces';

    public const ADDONS = 'addons';

    private const _ALL_VALUES = [
        self::ID,
        self::CREATED_TS,
        self::MODIFIED_TS,
        self::ACCOUNT_NUMBER,
        self::ADDRESS,
        self::BRANDING_DOMAIN_ID,
        self::CONTACT_EMAIL_TRX_RECEIPT_DEFAULT,
        self::DEFAULT_ACH,
        self::DEFAULT_CC,
        self::EMAIL_REPLY_TO,
        self::FAX,
        self::LOCATION_API_ID,
        self::LOCATION_API_KEY,
        self::LOCATION_C1,
        self::LOCATION_C2,
        self::LOCATION_C3,
        self::NAME,
        self::OFFICE_PHONE,
        self::OFFICE_EXT_PHONE,
        self::TZ,
        self::PARENT_ID,
        self::SHOW_CONTACT_NOTES,
        self::SHOW_CONTACT_FILES,
        self::CREATED_USER_ID,
        self::LOCATION_TYPE,
        self::BRANDING_DOMAIN_URL,
        self::BRANDING_DOMAIN,
        self::PRODUCT_TRANSACTIONS,
        self::PRODUCT_FILE,
        self::PRODUCT_ACCOUNTVAULT,
        self::PRODUCT_RECURRING,
        self::TAGS,
        self::TERMINALS,
        self::RELATIONSHIP,
        self::USERS,
        self::IS_DELETABLE,
        self::PRODUCT_INVOICE,
        self::PRODUCT_FILES,
        self::PARENT_,
        self::CREATED_USER,
        self::CHANGELOGS,
        self::TERMINAL_ROUTERS,
        self::DEVELOPER_COMPANY,
        self::DEVELOPER_COMPANY_ID,
        self::HELPPAGES,
        self::QUICK_INVOICE_SETTING,
        self::LOCATION_BILLING_ACCOUNTS,
        self::MARKETPLACES,
        self::LOCATIONMARKETPLACES,
        self::ADDONS
    ];

    /**
     * Ensures that all the given values are present in this Enum.
     *
     * @param array|stdClass|null|string $value Value or a list/map of values to be checked
     *
     * @return array|null|string Input value(s), if all are a part of this Enum
     *
     * @throws Exception Throws exception if any given value is not in this Enum
     */
    public static function checkValue($value)
    {
        $value = json_decode(json_encode($value), true); // converts stdClass into array
        if (CoreHelper::checkValueOrValuesInList($value, self::_ALL_VALUES)) {
            return $value;
        }
        throw new Exception("$value is invalid for Field32Enum.");
    }
}
