<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models;

use stdClass;

class Data4 implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $declinedRecurringTransactionId;

    /**
     * @var string|null
     */
    private $accountNumber;

    /**
     * @var array
     */
    private $accountHolderName = [];

    /**
     * @var string|null
     */
    private $expDate;

    /**
     * @var int|null
     */
    private $transactionAmount;

    /**
     * @var string|null
     */
    private $description;

    /**
     * @var BillingAddress|null
     */
    private $billingAddress;

    /**
     * @var array
     */
    private $tags = [];

    /**
     * @var string|null
     */
    private $id;

    /**
     * @var string|null
     */
    private $firstSix;

    /**
     * @var string|null
     */
    private $lastFour;

    /**
     * @var array
     */
    private $routing = [];

    /**
     * @var float|null
     */
    private $statusId;

    /**
     * @var array
     */
    private $reasonCodeId = [];

    /**
     * @var float|null
     */
    private $typeId;

    /**
     * @var int|null
     */
    private $createdTs;

    /**
     * @var string|null
     */
    private $createdUserId;

    /**
     * Returns Declined Recurring Transaction Id.
     * Declined Recurring Transaction Id
     */
    public function getDeclinedRecurringTransactionId(): ?string
    {
        return $this->declinedRecurringTransactionId;
    }

    /**
     * Sets Declined Recurring Transaction Id.
     * Declined Recurring Transaction Id
     *
     * @maps declined_recurring_transaction_id
     */
    public function setDeclinedRecurringTransactionId(?string $declinedRecurringTransactionId): void
    {
        $this->declinedRecurringTransactionId = $declinedRecurringTransactionId;
    }

    /**
     * Returns Account Number.
     * Account Number
     */
    public function getAccountNumber(): ?string
    {
        return $this->accountNumber;
    }

    /**
     * Sets Account Number.
     * Account Number
     *
     * @maps account_number
     */
    public function setAccountNumber(?string $accountNumber): void
    {
        $this->accountNumber = $accountNumber;
    }

    /**
     * Returns Account Holder Name.
     * Account Holder Name
     */
    public function getAccountHolderName(): ?string
    {
        if (count($this->accountHolderName) == 0) {
            return null;
        }
        return $this->accountHolderName['value'];
    }

    /**
     * Sets Account Holder Name.
     * Account Holder Name
     *
     * @maps account_holder_name
     */
    public function setAccountHolderName(?string $accountHolderName): void
    {
        $this->accountHolderName['value'] = $accountHolderName;
    }

    /**
     * Unsets Account Holder Name.
     * Account Holder Name
     */
    public function unsetAccountHolderName(): void
    {
        $this->accountHolderName = [];
    }

    /**
     * Returns Exp Date.
     * Exp Date
     */
    public function getExpDate(): ?string
    {
        return $this->expDate;
    }

    /**
     * Sets Exp Date.
     * Exp Date
     *
     * @maps exp_date
     */
    public function setExpDate(?string $expDate): void
    {
        $this->expDate = $expDate;
    }

    /**
     * Returns Transaction Amount.
     * Transaction Amount
     */
    public function getTransactionAmount(): ?int
    {
        return $this->transactionAmount;
    }

    /**
     * Sets Transaction Amount.
     * Transaction Amount
     *
     * @maps transaction_amount
     */
    public function setTransactionAmount(?int $transactionAmount): void
    {
        $this->transactionAmount = $transactionAmount;
    }

    /**
     * Returns Description.
     * Description
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
     * Sets Description.
     * Description
     *
     * @maps description
     */
    public function setDescription(?string $description): void
    {
        $this->description = $description;
    }

    /**
     * Returns Billing Address.
     * Billing Address Object
     */
    public function getBillingAddress(): ?BillingAddress
    {
        return $this->billingAddress;
    }

    /**
     * Sets Billing Address.
     * Billing Address Object
     *
     * @maps billing_address
     */
    public function setBillingAddress(?BillingAddress $billingAddress): void
    {
        $this->billingAddress = $billingAddress;
    }

    /**
     * Returns Tags.
     * Tags
     *
     * @return string[]|null
     */
    public function getTags(): ?array
    {
        if (count($this->tags) == 0) {
            return null;
        }
        return $this->tags['value'];
    }

    /**
     * Sets Tags.
     * Tags
     *
     * @maps tags
     *
     * @param string[]|null $tags
     */
    public function setTags(?array $tags): void
    {
        $this->tags['value'] = $tags;
    }

    /**
     * Unsets Tags.
     * Tags
     */
    public function unsetTags(): void
    {
        $this->tags = [];
    }

    /**
     * Returns Id.
     * Id
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     * Id
     *
     * @maps id
     */
    public function setId(?string $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns First Six.
     * First Six
     */
    public function getFirstSix(): ?string
    {
        return $this->firstSix;
    }

    /**
     * Sets First Six.
     * First Six
     *
     * @maps first_six
     */
    public function setFirstSix(?string $firstSix): void
    {
        $this->firstSix = $firstSix;
    }

    /**
     * Returns Last Four.
     * Last Four
     */
    public function getLastFour(): ?string
    {
        return $this->lastFour;
    }

    /**
     * Sets Last Four.
     * Last Four
     *
     * @maps last_four
     */
    public function setLastFour(?string $lastFour): void
    {
        $this->lastFour = $lastFour;
    }

    /**
     * Returns Routing.
     * Routing
     */
    public function getRouting(): ?string
    {
        if (count($this->routing) == 0) {
            return null;
        }
        return $this->routing['value'];
    }

    /**
     * Sets Routing.
     * Routing
     *
     * @maps routing
     */
    public function setRouting(?string $routing): void
    {
        $this->routing['value'] = $routing;
    }

    /**
     * Unsets Routing.
     * Routing
     */
    public function unsetRouting(): void
    {
        $this->routing = [];
    }

    /**
     * Returns Status Id.
     * Status Id
     */
    public function getStatusId(): ?float
    {
        return $this->statusId;
    }

    /**
     * Sets Status Id.
     * Status Id
     *
     * @maps status_id
     */
    public function setStatusId(?float $statusId): void
    {
        $this->statusId = $statusId;
    }

    /**
     * Returns Reason Code Id.
     * Reason Code Id
     */
    public function getReasonCodeId(): ?int
    {
        if (count($this->reasonCodeId) == 0) {
            return null;
        }
        return $this->reasonCodeId['value'];
    }

    /**
     * Sets Reason Code Id.
     * Reason Code Id
     *
     * @maps reason_code_id
     * @factory \FortisAPILib\Models\ReasonCodeIdEnum::checkValue
     */
    public function setReasonCodeId(?int $reasonCodeId): void
    {
        $this->reasonCodeId['value'] = $reasonCodeId;
    }

    /**
     * Unsets Reason Code Id.
     * Reason Code Id
     */
    public function unsetReasonCodeId(): void
    {
        $this->reasonCodeId = [];
    }

    /**
     * Returns Type Id.
     * Type Id
     */
    public function getTypeId(): ?float
    {
        return $this->typeId;
    }

    /**
     * Sets Type Id.
     * Type Id
     *
     * @maps type_id
     */
    public function setTypeId(?float $typeId): void
    {
        $this->typeId = $typeId;
    }

    /**
     * Returns Created Ts.
     * Created Time Stamp
     */
    public function getCreatedTs(): ?int
    {
        return $this->createdTs;
    }

    /**
     * Sets Created Ts.
     * Created Time Stamp
     *
     * @maps created_ts
     */
    public function setCreatedTs(?int $createdTs): void
    {
        $this->createdTs = $createdTs;
    }

    /**
     * Returns Created User Id.
     * User ID Created the register
     */
    public function getCreatedUserId(): ?string
    {
        return $this->createdUserId;
    }

    /**
     * Sets Created User Id.
     * User ID Created the register
     *
     * @maps created_user_id
     */
    public function setCreatedUserId(?string $createdUserId): void
    {
        $this->createdUserId = $createdUserId;
    }

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function addAdditionalProperty(string $name, $value)
    {
        $this->additionalProperties[$name] = $value;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->declinedRecurringTransactionId)) {
            $json['declined_recurring_transaction_id'] = $this->declinedRecurringTransactionId;
        }
        if (isset($this->accountNumber)) {
            $json['account_number']                    = $this->accountNumber;
        }
        if (!empty($this->accountHolderName)) {
            $json['account_holder_name']               = $this->accountHolderName['value'];
        }
        if (isset($this->expDate)) {
            $json['exp_date']                          = $this->expDate;
        }
        if (isset($this->transactionAmount)) {
            $json['transaction_amount']                = $this->transactionAmount;
        }
        if (isset($this->description)) {
            $json['description']                       = $this->description;
        }
        if (isset($this->billingAddress)) {
            $json['billing_address']                   = $this->billingAddress;
        }
        if (!empty($this->tags)) {
            $json['tags']                              = $this->tags['value'];
        }
        if (isset($this->id)) {
            $json['id']                                = $this->id;
        }
        if (isset($this->firstSix)) {
            $json['first_six']                         = $this->firstSix;
        }
        if (isset($this->lastFour)) {
            $json['last_four']                         = $this->lastFour;
        }
        if (!empty($this->routing)) {
            $json['routing']                           = $this->routing['value'];
        }
        if (isset($this->statusId)) {
            $json['status_id']                         = $this->statusId;
        }
        if (!empty($this->reasonCodeId)) {
            $json['reason_code_id']                    = ReasonCodeIdEnum::checkValue($this->reasonCodeId['value']);
        }
        if (isset($this->typeId)) {
            $json['type_id']                           = $this->typeId;
        }
        if (isset($this->createdTs)) {
            $json['created_ts']                        = $this->createdTs;
        }
        if (isset($this->createdUserId)) {
            $json['created_user_id']                   = $this->createdUserId;
        }
        $json = array_merge($json, $this->additionalProperties);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
