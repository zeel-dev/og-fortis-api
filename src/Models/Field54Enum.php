<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models;

use Core\Utils\CoreHelper;
use Exception;
use stdClass;

class Field54Enum
{
    public const ACCOUNT_NUMBER = 'account_number';

    public const BRANDING_DOMAIN_URL = 'branding_domain_url';

    public const CELL_PHONE = 'cell_phone';

    public const COMPANY_NAME = 'company_name';

    public const CONTACT_ID = 'contact_id';

    public const DATE_OF_BIRTH = 'date_of_birth';

    public const DOMAIN_ID = 'domain_id';

    public const EMAIL = 'email';

    public const EMAIL_TRX_RECEIPT = 'email_trx_receipt';

    public const HOME_PHONE = 'home_phone';

    public const FIRST_NAME = 'first_name';

    public const LAST_NAME = 'last_name';

    public const LOCALE = 'locale';

    public const OFFICE_PHONE = 'office_phone';

    public const OFFICE_EXT_PHONE = 'office_ext_phone';

    public const PRIMARY_LOCATION_ID = 'primary_location_id';

    public const REQUIRES_NEW_PASSWORD = 'requires_new_password';

    public const TERMS_CONDITION_CODE = 'terms_condition_code';

    public const TZ = 'tz';

    public const UI_PREFS = 'ui_prefs';

    public const USERNAME = 'username';

    public const USER_API_KEY = 'user_api_key';

    public const USER_HASH_KEY = 'user_hash_key';

    public const USER_TYPE_CODE = 'user_type_code';

    public const PASSWORD = 'password';

    public const ZIP = 'zip';

    public const LOCATION_ID = 'location_id';

    public const CONTACT_API_ID = 'contact_api_id';

    public const PRIMARY_LOCATION_API_ID = 'primary_location_api_id';

    public const STATUS_CODE = 'status_code';

    public const API_ONLY = 'api_only';

    public const IS_INVITATION = 'is_invitation';

    public const ADDRESS = 'address';

    public const ID = 'id';

    public const STATUS = 'status';

    public const LOGIN_ATTEMPTS = 'login_attempts';

    public const LAST_LOGIN_TS = 'last_login_ts';

    public const CREATED_TS = 'created_ts';

    public const MODIFIED_TS = 'modified_ts';

    public const CREATED_USER_ID = 'created_user_id';

    public const TERMS_ACCEPTED_TS = 'terms_accepted_ts';

    public const TERMS_AGREE_IP = 'terms_agree_ip';

    public const CURRENT_DATE_TIME = 'current_date_time';

    public const CURRENT_LOGIN_IP = 'current_login_ip';

    public const CURRENT_LOGIN = 'current_login';

    public const SFTP_ACCESS = 'sftp_access';

    public const LOG_API_RESPONSE_BODY_TS = 'log_api_response_body_ts';

    public const LOCATIONS = 'locations';

    public const PRIMARY_LOCATION = 'primary_location';

    public const RECEIVED_EMAILS = 'received_emails';

    public const CONTACT = 'contact';

    public const ISDELETABLE = 'isDeletable';

    public const ACTIVE_NOTIFICATION_ALERTS = 'active_notification_alerts';

    public const LOCATION_USERS = 'location_users';

    public const AUTH_ROLES = 'auth_roles';

    public const CHANGELOGS = 'changelogs';

    public const RESOURCES = 'resources';

    public const DOMAIN = 'domain';

    public const CREATED_USER = 'created_user';

    public const LOCATION_MARKETPLACES = 'location_marketplaces';

    public const EMAIL_BLACKLIST = 'email_blacklist';

    public const HELPPAGE = 'helppage';

    public const FEATURE_FLAGS = 'feature_flags';

    private const _ALL_VALUES = [
        self::ACCOUNT_NUMBER,
        self::BRANDING_DOMAIN_URL,
        self::CELL_PHONE,
        self::COMPANY_NAME,
        self::CONTACT_ID,
        self::DATE_OF_BIRTH,
        self::DOMAIN_ID,
        self::EMAIL,
        self::EMAIL_TRX_RECEIPT,
        self::HOME_PHONE,
        self::FIRST_NAME,
        self::LAST_NAME,
        self::LOCALE,
        self::OFFICE_PHONE,
        self::OFFICE_EXT_PHONE,
        self::PRIMARY_LOCATION_ID,
        self::REQUIRES_NEW_PASSWORD,
        self::TERMS_CONDITION_CODE,
        self::TZ,
        self::UI_PREFS,
        self::USERNAME,
        self::USER_API_KEY,
        self::USER_HASH_KEY,
        self::USER_TYPE_CODE,
        self::PASSWORD,
        self::ZIP,
        self::LOCATION_ID,
        self::CONTACT_API_ID,
        self::PRIMARY_LOCATION_API_ID,
        self::STATUS_CODE,
        self::API_ONLY,
        self::IS_INVITATION,
        self::ADDRESS,
        self::ID,
        self::STATUS,
        self::LOGIN_ATTEMPTS,
        self::LAST_LOGIN_TS,
        self::CREATED_TS,
        self::MODIFIED_TS,
        self::CREATED_USER_ID,
        self::TERMS_ACCEPTED_TS,
        self::TERMS_AGREE_IP,
        self::CURRENT_DATE_TIME,
        self::CURRENT_LOGIN_IP,
        self::CURRENT_LOGIN,
        self::SFTP_ACCESS,
        self::LOG_API_RESPONSE_BODY_TS,
        self::LOCATIONS,
        self::PRIMARY_LOCATION,
        self::RECEIVED_EMAILS,
        self::CONTACT,
        self::ISDELETABLE,
        self::ACTIVE_NOTIFICATION_ALERTS,
        self::LOCATION_USERS,
        self::AUTH_ROLES,
        self::CHANGELOGS,
        self::RESOURCES,
        self::DOMAIN,
        self::CREATED_USER,
        self::LOCATION_MARKETPLACES,
        self::EMAIL_BLACKLIST,
        self::HELPPAGE,
        self::FEATURE_FLAGS
    ];

    /**
     * Ensures that all the given values are present in this Enum.
     *
     * @param array|stdClass|null|string $value Value or a list/map of values to be checked
     *
     * @return array|null|string Input value(s), if all are a part of this Enum
     *
     * @throws Exception Throws exception if any given value is not in this Enum
     */
    public static function checkValue($value)
    {
        $value = json_decode(json_encode($value), true); // converts stdClass into array
        if (CoreHelper::checkValueOrValuesInList($value, self::_ALL_VALUES)) {
            return $value;
        }
        throw new Exception("$value is invalid for Field54Enum.");
    }
}
