<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models;

use stdClass;

/**
 * Array of bank account objects.
 */
class BankAccount1 implements \JsonSerializable
{
    /**
     * @var string
     */
    private $accountHolderName;

    /**
     * @var string
     */
    private $routingNumber;

    /**
     * @var string
     */
    private $accountNumber;

    /**
     * @var bool|null
     */
    private $isPrimary;

    /**
     * @var string
     */
    private $accountType;

    /**
     * @var string[]|null
     */
    private $altDepositTypes;

    /**
     * @param string $accountHolderName
     * @param string $routingNumber
     * @param string $accountNumber
     * @param string $accountType
     */
    public function __construct(
        string $accountHolderName,
        string $routingNumber,
        string $accountNumber,
        string $accountType
    ) {
        $this->accountHolderName = $accountHolderName;
        $this->routingNumber = $routingNumber;
        $this->accountNumber = $accountNumber;
        $this->accountType = $accountType;
    }

    /**
     * Returns Account Holder Name.
     * Account holder name.
     */
    public function getAccountHolderName(): string
    {
        return $this->accountHolderName;
    }

    /**
     * Sets Account Holder Name.
     * Account holder name.
     *
     * @required
     * @maps account_holder_name
     */
    public function setAccountHolderName(string $accountHolderName): void
    {
        $this->accountHolderName = $accountHolderName;
    }

    /**
     * Returns Routing Number.
     * Nine-digit Bank routing number.
     */
    public function getRoutingNumber(): string
    {
        return $this->routingNumber;
    }

    /**
     * Sets Routing Number.
     * Nine-digit Bank routing number.
     *
     * @required
     * @maps routing_number
     */
    public function setRoutingNumber(string $routingNumber): void
    {
        $this->routingNumber = $routingNumber;
    }

    /**
     * Returns Account Number.
     * Account number.
     */
    public function getAccountNumber(): string
    {
        return $this->accountNumber;
    }

    /**
     * Sets Account Number.
     * Account number.
     *
     * @required
     * @maps account_number
     */
    public function setAccountNumber(string $accountNumber): void
    {
        $this->accountNumber = $accountNumber;
    }

    /**
     * Returns Is Primary.
     * Flag indicating whether or not the account is the primary account. Only one account can be marked as
     * primary.
     */
    public function getIsPrimary(): ?bool
    {
        return $this->isPrimary;
    }

    /**
     * Sets Is Primary.
     * Flag indicating whether or not the account is the primary account. Only one account can be marked as
     * primary.
     *
     * @maps is_primary
     */
    public function setIsPrimary(?bool $isPrimary): void
    {
        $this->isPrimary = $isPrimary;
    }

    /**
     * Returns Account Type.
     * Account type. Either "checking" or "savings"
     */
    public function getAccountType(): string
    {
        return $this->accountType;
    }

    /**
     * Sets Account Type.
     * Account type. Either "checking" or "savings"
     *
     * @required
     * @maps account_type
     * @factory \FortisAPILib\Models\AccountType6Enum::checkValue
     */
    public function setAccountType(string $accountType): void
    {
        $this->accountType = $accountType;
    }

    /**
     * Returns Alt Deposit Types.
     * Array of deposit types. ('fees', 'adjustments', 'returns')
     *
     * @return string[]|null
     */
    public function getAltDepositTypes(): ?array
    {
        return $this->altDepositTypes;
    }

    /**
     * Sets Alt Deposit Types.
     * Array of deposit types. ('fees', 'adjustments', 'returns')
     *
     * @maps alt_deposit_types
     *
     * @param string[]|null $altDepositTypes
     */
    public function setAltDepositTypes(?array $altDepositTypes): void
    {
        $this->altDepositTypes = $altDepositTypes;
    }

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function addAdditionalProperty(string $name, $value)
    {
        $this->additionalProperties[$name] = $value;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['account_holder_name']   = $this->accountHolderName;
        $json['routing_number']        = $this->routingNumber;
        $json['account_number']        = $this->accountNumber;
        if (isset($this->isPrimary)) {
            $json['is_primary']        = $this->isPrimary;
        }
        $json['account_type']          = AccountType6Enum::checkValue($this->accountType);
        if (isset($this->altDepositTypes)) {
            $json['alt_deposit_types'] = $this->altDepositTypes;
        }
        $json = array_merge($json, $this->additionalProperties);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
