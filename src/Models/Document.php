<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models;

use stdClass;

/**
 * Array of document objects.
 */
class Document implements \JsonSerializable
{
    /**
     * @var string
     */
    private $documentName;

    /**
     * @var string
     */
    private $documentData;

    /**
     * @var string
     */
    private $mimeType;

    /**
     * @param string $documentName
     * @param string $documentData
     * @param string $mimeType
     */
    public function __construct(string $documentName, string $documentData, string $mimeType)
    {
        $this->documentName = $documentName;
        $this->documentData = $documentData;
        $this->mimeType = $mimeType;
    }

    /**
     * Returns Document Name.
     * Array of bank account objects.
     */
    public function getDocumentName(): string
    {
        return $this->documentName;
    }

    /**
     * Sets Document Name.
     * Array of bank account objects.
     *
     * @required
     * @maps document_name
     */
    public function setDocumentName(string $documentName): void
    {
        $this->documentName = $documentName;
    }

    /**
     * Returns Document Data.
     * Base64 encoded document content.
     */
    public function getDocumentData(): string
    {
        return $this->documentData;
    }

    /**
     * Sets Document Data.
     * Base64 encoded document content.
     *
     * @required
     * @maps document_data
     */
    public function setDocumentData(string $documentData): void
    {
        $this->documentData = $documentData;
    }

    /**
     * Returns Mime Type.
     * Mime type of document.
     */
    public function getMimeType(): string
    {
        return $this->mimeType;
    }

    /**
     * Sets Mime Type.
     * Mime type of document.
     *
     * @required
     * @maps mime_type
     */
    public function setMimeType(string $mimeType): void
    {
        $this->mimeType = $mimeType;
    }

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function addAdditionalProperty(string $name, $value)
    {
        $this->additionalProperties[$name] = $value;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['document_name'] = $this->documentName;
        $json['document_data'] = $this->documentData;
        $json['mime_type']     = $this->mimeType;
        $json = array_merge($json, $this->additionalProperties);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
