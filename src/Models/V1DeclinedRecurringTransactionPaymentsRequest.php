<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models;

use stdClass;

class V1DeclinedRecurringTransactionPaymentsRequest implements \JsonSerializable
{
    /**
     * @var string
     */
    private $declinedRecurringTransactionId;

    /**
     * @var string
     */
    private $accountNumber;

    /**
     * @var array
     */
    private $accountHolderName = [];

    /**
     * @var string
     */
    private $expDate;

    /**
     * @var int
     */
    private $transactionAmount;

    /**
     * @var string|null
     */
    private $description;

    /**
     * @var BillingAddress|null
     */
    private $billingAddress;

    /**
     * @var array
     */
    private $tags = [];

    /**
     * @var bool|null
     */
    private $replaceAccountVault;

    /**
     * @var bool|null
     */
    private $saveAccount;

    /**
     * @var array
     */
    private $saveAccountTitle = [];

    /**
     * @var array
     */
    private $subtotalAmount = [];

    /**
     * @var array
     */
    private $surchargeAmount = [];

    /**
     * @param string $declinedRecurringTransactionId
     * @param string $accountNumber
     * @param string $expDate
     * @param int $transactionAmount
     */
    public function __construct(
        string $declinedRecurringTransactionId,
        string $accountNumber,
        string $expDate,
        int $transactionAmount
    ) {
        $this->declinedRecurringTransactionId = $declinedRecurringTransactionId;
        $this->accountNumber = $accountNumber;
        $this->expDate = $expDate;
        $this->transactionAmount = $transactionAmount;
    }

    /**
     * Returns Declined Recurring Transaction Id.
     * Declined Recurring Transaction Id
     */
    public function getDeclinedRecurringTransactionId(): string
    {
        return $this->declinedRecurringTransactionId;
    }

    /**
     * Sets Declined Recurring Transaction Id.
     * Declined Recurring Transaction Id
     *
     * @required
     * @maps declined_recurring_transaction_id
     */
    public function setDeclinedRecurringTransactionId(string $declinedRecurringTransactionId): void
    {
        $this->declinedRecurringTransactionId = $declinedRecurringTransactionId;
    }

    /**
     * Returns Account Number.
     * Account Number
     */
    public function getAccountNumber(): string
    {
        return $this->accountNumber;
    }

    /**
     * Sets Account Number.
     * Account Number
     *
     * @required
     * @maps account_number
     */
    public function setAccountNumber(string $accountNumber): void
    {
        $this->accountNumber = $accountNumber;
    }

    /**
     * Returns Account Holder Name.
     * Account Holder Name
     */
    public function getAccountHolderName(): ?string
    {
        if (count($this->accountHolderName) == 0) {
            return null;
        }
        return $this->accountHolderName['value'];
    }

    /**
     * Sets Account Holder Name.
     * Account Holder Name
     *
     * @maps account_holder_name
     */
    public function setAccountHolderName(?string $accountHolderName): void
    {
        $this->accountHolderName['value'] = $accountHolderName;
    }

    /**
     * Unsets Account Holder Name.
     * Account Holder Name
     */
    public function unsetAccountHolderName(): void
    {
        $this->accountHolderName = [];
    }

    /**
     * Returns Exp Date.
     * Exp Date
     */
    public function getExpDate(): string
    {
        return $this->expDate;
    }

    /**
     * Sets Exp Date.
     * Exp Date
     *
     * @required
     * @maps exp_date
     */
    public function setExpDate(string $expDate): void
    {
        $this->expDate = $expDate;
    }

    /**
     * Returns Transaction Amount.
     * Transaction Amount
     */
    public function getTransactionAmount(): int
    {
        return $this->transactionAmount;
    }

    /**
     * Sets Transaction Amount.
     * Transaction Amount
     *
     * @required
     * @maps transaction_amount
     */
    public function setTransactionAmount(int $transactionAmount): void
    {
        $this->transactionAmount = $transactionAmount;
    }

    /**
     * Returns Description.
     * Description
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
     * Sets Description.
     * Description
     *
     * @maps description
     */
    public function setDescription(?string $description): void
    {
        $this->description = $description;
    }

    /**
     * Returns Billing Address.
     * Billing Address Object
     */
    public function getBillingAddress(): ?BillingAddress
    {
        return $this->billingAddress;
    }

    /**
     * Sets Billing Address.
     * Billing Address Object
     *
     * @maps billing_address
     */
    public function setBillingAddress(?BillingAddress $billingAddress): void
    {
        $this->billingAddress = $billingAddress;
    }

    /**
     * Returns Tags.
     * Tags
     *
     * @return string[]|null
     */
    public function getTags(): ?array
    {
        if (count($this->tags) == 0) {
            return null;
        }
        return $this->tags['value'];
    }

    /**
     * Sets Tags.
     * Tags
     *
     * @maps tags
     *
     * @param string[]|null $tags
     */
    public function setTags(?array $tags): void
    {
        $this->tags['value'] = $tags;
    }

    /**
     * Unsets Tags.
     * Tags
     */
    public function unsetTags(): void
    {
        $this->tags = [];
    }

    /**
     * Returns Replace Account Vault.
     * Replace AccountVault
     */
    public function getReplaceAccountVault(): ?bool
    {
        return $this->replaceAccountVault;
    }

    /**
     * Sets Replace Account Vault.
     * Replace AccountVault
     *
     * @maps replace_account_vault
     */
    public function setReplaceAccountVault(?bool $replaceAccountVault): void
    {
        $this->replaceAccountVault = $replaceAccountVault;
    }

    /**
     * Returns Save Account.
     * Specifies to save account to contacts profile if account_number/track_data is present with either
     * contact_id or contact_api_id in params.
     */
    public function getSaveAccount(): ?bool
    {
        return $this->saveAccount;
    }

    /**
     * Sets Save Account.
     * Specifies to save account to contacts profile if account_number/track_data is present with either
     * contact_id or contact_api_id in params.
     *
     * @maps save_account
     */
    public function setSaveAccount(?bool $saveAccount): void
    {
        $this->saveAccount = $saveAccount;
    }

    /**
     * Returns Save Account Title.
     * If saving token while running a transaction, this will be the title of the token.
     */
    public function getSaveAccountTitle(): ?string
    {
        if (count($this->saveAccountTitle) == 0) {
            return null;
        }
        return $this->saveAccountTitle['value'];
    }

    /**
     * Sets Save Account Title.
     * If saving token while running a transaction, this will be the title of the token.
     *
     * @maps save_account_title
     */
    public function setSaveAccountTitle(?string $saveAccountTitle): void
    {
        $this->saveAccountTitle['value'] = $saveAccountTitle;
    }

    /**
     * Unsets Save Account Title.
     * If saving token while running a transaction, this will be the title of the token.
     */
    public function unsetSaveAccountTitle(): void
    {
        $this->saveAccountTitle = [];
    }

    /**
     * Returns Subtotal Amount.
     * Subtotal Amount
     */
    public function getSubtotalAmount(): ?int
    {
        if (count($this->subtotalAmount) == 0) {
            return null;
        }
        return $this->subtotalAmount['value'];
    }

    /**
     * Sets Subtotal Amount.
     * Subtotal Amount
     *
     * @maps subtotal_amount
     */
    public function setSubtotalAmount(?int $subtotalAmount): void
    {
        $this->subtotalAmount['value'] = $subtotalAmount;
    }

    /**
     * Unsets Subtotal Amount.
     * Subtotal Amount
     */
    public function unsetSubtotalAmount(): void
    {
        $this->subtotalAmount = [];
    }

    /**
     * Returns Surcharge Amount.
     * Surcharge Amount
     */
    public function getSurchargeAmount(): ?int
    {
        if (count($this->surchargeAmount) == 0) {
            return null;
        }
        return $this->surchargeAmount['value'];
    }

    /**
     * Sets Surcharge Amount.
     * Surcharge Amount
     *
     * @maps surcharge_amount
     */
    public function setSurchargeAmount(?int $surchargeAmount): void
    {
        $this->surchargeAmount['value'] = $surchargeAmount;
    }

    /**
     * Unsets Surcharge Amount.
     * Surcharge Amount
     */
    public function unsetSurchargeAmount(): void
    {
        $this->surchargeAmount = [];
    }

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function addAdditionalProperty(string $name, $value)
    {
        $this->additionalProperties[$name] = $value;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['declined_recurring_transaction_id'] = $this->declinedRecurringTransactionId;
        $json['account_number']                    = $this->accountNumber;
        if (!empty($this->accountHolderName)) {
            $json['account_holder_name']           = $this->accountHolderName['value'];
        }
        $json['exp_date']                          = $this->expDate;
        $json['transaction_amount']                = $this->transactionAmount;
        if (isset($this->description)) {
            $json['description']                   = $this->description;
        }
        if (isset($this->billingAddress)) {
            $json['billing_address']               = $this->billingAddress;
        }
        if (!empty($this->tags)) {
            $json['tags']                          = $this->tags['value'];
        }
        if (isset($this->replaceAccountVault)) {
            $json['replace_account_vault']         = $this->replaceAccountVault;
        }
        if (isset($this->saveAccount)) {
            $json['save_account']                  = $this->saveAccount;
        }
        if (!empty($this->saveAccountTitle)) {
            $json['save_account_title']            = $this->saveAccountTitle['value'];
        }
        if (!empty($this->subtotalAmount)) {
            $json['subtotal_amount']               = $this->subtotalAmount['value'];
        }
        if (!empty($this->surchargeAmount)) {
            $json['surcharge_amount']              = $this->surchargeAmount['value'];
        }
        $json = array_merge($json, $this->additionalProperties);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
