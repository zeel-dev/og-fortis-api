<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models;

use stdClass;

/**
 * Quick Invoice Setting Information on `expand`
 */
class QuickInvoiceSetting implements \JsonSerializable
{
    /**
     * @var array
     */
    private $locationApiId = [];

    /**
     * @var string|null
     */
    private $locationId;

    /**
     * @var string|null
     */
    private $quickInvoiceTemplate;

    /**
     * @var bool|null
     */
    private $defaultAllowPartialPay;

    /**
     * @var bool|null
     */
    private $defaultNotificationOnDueDate;

    /**
     * @var float|null
     */
    private $defaultNotificationDaysAfterDueDate;

    /**
     * @var float|null
     */
    private $defaultNotificationDaysBeforeDueDate;

    /**
     * @var string|null
     */
    private $id;

    /**
     * Returns Location Api Id.
     * Location API ID
     */
    public function getLocationApiId(): ?string
    {
        if (count($this->locationApiId) == 0) {
            return null;
        }
        return $this->locationApiId['value'];
    }

    /**
     * Sets Location Api Id.
     * Location API ID
     *
     * @maps location_api_id
     */
    public function setLocationApiId(?string $locationApiId): void
    {
        $this->locationApiId['value'] = $locationApiId;
    }

    /**
     * Unsets Location Api Id.
     * Location API ID
     */
    public function unsetLocationApiId(): void
    {
        $this->locationApiId = [];
    }

    /**
     * Returns Location Id.
     * Location ID
     */
    public function getLocationId(): ?string
    {
        return $this->locationId;
    }

    /**
     * Sets Location Id.
     * Location ID
     *
     * @maps location_id
     */
    public function setLocationId(?string $locationId): void
    {
        $this->locationId = $locationId;
    }

    /**
     * Returns Quick Invoice Template.
     * Quick Invoice Template
     */
    public function getQuickInvoiceTemplate(): ?string
    {
        return $this->quickInvoiceTemplate;
    }

    /**
     * Sets Quick Invoice Template.
     * Quick Invoice Template
     *
     * @maps quick_invoice_template
     */
    public function setQuickInvoiceTemplate(?string $quickInvoiceTemplate): void
    {
        $this->quickInvoiceTemplate = $quickInvoiceTemplate;
    }

    /**
     * Returns Default Allow Partial Pay.
     * Default Quick Invoice Allow Partial Pay
     */
    public function getDefaultAllowPartialPay(): ?bool
    {
        return $this->defaultAllowPartialPay;
    }

    /**
     * Sets Default Allow Partial Pay.
     * Default Quick Invoice Allow Partial Pay
     *
     * @maps default_allow_partial_pay
     */
    public function setDefaultAllowPartialPay(?bool $defaultAllowPartialPay): void
    {
        $this->defaultAllowPartialPay = $defaultAllowPartialPay;
    }

    /**
     * Returns Default Notification on Due Date.
     * Default Quick Invoice Notification On Due Date
     */
    public function getDefaultNotificationOnDueDate(): ?bool
    {
        return $this->defaultNotificationOnDueDate;
    }

    /**
     * Sets Default Notification on Due Date.
     * Default Quick Invoice Notification On Due Date
     *
     * @maps default_notification_on_due_date
     */
    public function setDefaultNotificationOnDueDate(?bool $defaultNotificationOnDueDate): void
    {
        $this->defaultNotificationOnDueDate = $defaultNotificationOnDueDate;
    }

    /**
     * Returns Default Notification Days After Due Date.
     * Default Quick Invoice Notification Days After Due Date
     */
    public function getDefaultNotificationDaysAfterDueDate(): ?float
    {
        return $this->defaultNotificationDaysAfterDueDate;
    }

    /**
     * Sets Default Notification Days After Due Date.
     * Default Quick Invoice Notification Days After Due Date
     *
     * @maps default_notification_days_after_due_date
     */
    public function setDefaultNotificationDaysAfterDueDate(?float $defaultNotificationDaysAfterDueDate): void
    {
        $this->defaultNotificationDaysAfterDueDate = $defaultNotificationDaysAfterDueDate;
    }

    /**
     * Returns Default Notification Days Before Due Date.
     * Default Quick Invoice Notification Days Before Due Date
     */
    public function getDefaultNotificationDaysBeforeDueDate(): ?float
    {
        return $this->defaultNotificationDaysBeforeDueDate;
    }

    /**
     * Sets Default Notification Days Before Due Date.
     * Default Quick Invoice Notification Days Before Due Date
     *
     * @maps default_notification_days_before_due_date
     */
    public function setDefaultNotificationDaysBeforeDueDate(?float $defaultNotificationDaysBeforeDueDate): void
    {
        $this->defaultNotificationDaysBeforeDueDate = $defaultNotificationDaysBeforeDueDate;
    }

    /**
     * Returns Id.
     * Quick Invoice Settings ID
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     * Quick Invoice Settings ID
     *
     * @maps id
     */
    public function setId(?string $id): void
    {
        $this->id = $id;
    }

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function addAdditionalProperty(string $name, $value)
    {
        $this->additionalProperties[$name] = $value;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (!empty($this->locationApiId)) {
            $json['location_api_id']                           = $this->locationApiId['value'];
        }
        if (isset($this->locationId)) {
            $json['location_id']                               = $this->locationId;
        }
        if (isset($this->quickInvoiceTemplate)) {
            $json['quick_invoice_template']                    = $this->quickInvoiceTemplate;
        }
        if (isset($this->defaultAllowPartialPay)) {
            $json['default_allow_partial_pay']                 = $this->defaultAllowPartialPay;
        }
        if (isset($this->defaultNotificationOnDueDate)) {
            $json['default_notification_on_due_date']          = $this->defaultNotificationOnDueDate;
        }
        if (isset($this->defaultNotificationDaysAfterDueDate)) {
            $json['default_notification_days_after_due_date']  = $this->defaultNotificationDaysAfterDueDate;
        }
        if (isset($this->defaultNotificationDaysBeforeDueDate)) {
            $json['default_notification_days_before_due_date'] = $this->defaultNotificationDaysBeforeDueDate;
        }
        if (isset($this->id)) {
            $json['id']                                        = $this->id;
        }
        $json = array_merge($json, $this->additionalProperties);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
