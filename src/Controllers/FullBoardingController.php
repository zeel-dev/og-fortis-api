<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Controllers;

use Core\Authentication\Auth;
use Core\Request\Parameters\BodyParam;
use Core\Request\Parameters\HeaderParam;
use Core\Response\Types\ErrorType;
use CoreInterfaces\Core\Request\RequestMethod;
use FortisAPILib\Exceptions\ApiException;
use FortisAPILib\Exceptions\Response401tokenException;
use FortisAPILib\Exceptions\Response412Exception;
use FortisAPILib\Models\ResponseFullboarding;
use FortisAPILib\Models\V1FullboardingRequest;

class FullBoardingController extends BaseController
{
    /**
     * This method is used to fully board a merchant to the platform. When using this method, you must
     * provide data for each "Required" property. See the description for each of these properties for more
     * information about their requirement criteria.
     *
     * @param V1FullboardingRequest $body
     *
     * @return ResponseFullboarding Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function merchantBoardingFull(V1FullboardingRequest $body): ResponseFullboarding
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::POST, '/v1/fullboarding')
            ->auth(Auth::and('user-id', 'user-api-key', 'developer-id'))
            ->parameters(HeaderParam::init('Content-Type', 'application/json'), BodyParam::init($body));

        $_resHandler = $this->responseHandler()
            ->throwErrorOn('401', ErrorType::init('Unauthorized', Response401tokenException::class))
            ->throwErrorOn('412', ErrorType::init('Precondition Failed', Response412Exception::class))
            ->type(ResponseFullboarding::class);

        return $this->execute($_reqBuilder, $_resHandler);
    }
}
