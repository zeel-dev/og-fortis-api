<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Controllers;

use Core\Authentication\Auth;
use Core\Request\Parameters\BodyParam;
use Core\Request\Parameters\HeaderParam;
use Core\Response\Types\ErrorType;
use CoreInterfaces\Core\Request\RequestMethod;
use FortisAPILib\Exceptions\ApiException;
use FortisAPILib\Exceptions\Response401tokenException;
use FortisAPILib\Exceptions\Response412Exception;
use FortisAPILib\Models\ResponseMerchantDetails;
use FortisAPILib\Models\V1WalletProviderMerchantDetailsRequest;

class MerchantDetailsController extends BaseController
{
    /**
     * Merchant Details
     *
     * @param V1WalletProviderMerchantDetailsRequest $body
     *
     * @return ResponseMerchantDetails Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function merchantDetails(V1WalletProviderMerchantDetailsRequest $body): ResponseMerchantDetails
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::POST, '/v1/wallet-provider/merchant-details')
            ->auth(Auth::and('user-id', 'user-api-key', 'developer-id'))
            ->parameters(HeaderParam::init('Content-Type', 'application/json'), BodyParam::init($body));

        $_resHandler = $this->responseHandler()
            ->throwErrorOn('401', ErrorType::init('Unauthorized', Response401tokenException::class))
            ->throwErrorOn('412', ErrorType::init('Precondition Failed', Response412Exception::class))
            ->type(ResponseMerchantDetails::class);

        return $this->execute($_reqBuilder, $_resHandler);
    }
}
