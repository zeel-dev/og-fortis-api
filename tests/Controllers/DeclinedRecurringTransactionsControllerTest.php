<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Tests\Controllers;

use Core\TestCase\BodyMatchers\KeysBodyMatcher;
use Core\TestCase\TestParam;
use FortisAPILib\Controllers\DeclinedRecurringTransactionsController;
use FortisAPILib\Exceptions;

class DeclinedRecurringTransactionsControllerTest extends BaseTestController
{
    /**
     * @var DeclinedRecurringTransactionsController DeclinedRecurringTransactionsController instance
     */
    protected static $controller;

    /**
     * Setup test class
     */
    public static function setUpBeforeClass(): void
    {
        self::$controller = parent::getClient()->getDeclinedRecurringTransactionsController();
    }

    public function testGetOneDeclinedRecurringTransaction()
    {
        // Parameters for the API call
        $declinedRecurringTransactionId =
            '11e95f8ec39de8fbdb0a4f1a';
        $expand = null;

        // Perform API call
        $result = null;
        try {
            $result = self::$controller->getOneDeclinedRecurringTransaction(
                $declinedRecurringTransactionId,
                $expand
            );
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json', true];

        // Assert result with expected response
        $this->newTestCase($result)
            ->expectStatus(200)
            ->allowExtraHeaders()
            ->expectHeaders($headers)
            ->bodyMatcher(KeysBodyMatcher::init(TestParam::object(
                '{"type":"DeclinedRecurringTransaction","data":{"id":"11e95f8ec39de8fbdb0a4f1a"' .
                ',"status":"paid","recurring_id":"11e95f8ec39de8fbdb0a4f1a","created_ts":1422040' .
                '992,"created_user_id":"11e95f8ec39de8fbdb0a4f1a","modified_ts":1422040992,"modi' .
                'fied_user_id":"11e95f8ec39de8fbdb0a4f1a"}}'
            )))
            ->assert();
    }

    public function testListAllDeclinedRecurringTransactions()
    {
        // Parameters for the API call
        $page = null;
        $order = null;
        $filterBy = null;
        $expand = null;
        $format = null;
        $typeahead = null;
        $fields = null;

        // Perform API call
        $result = null;
        try {
            $result = self::$controller->listAllDeclinedRecurringTransactions(
                $page,
                $order,
                $filterBy,
                $expand,
                $format,
                $typeahead,
                $fields
            );
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json', true];

        // Assert result with expected response
        $this->newTestCase($result)
            ->expectStatus(200)
            ->allowExtraHeaders()
            ->expectHeaders($headers)
            ->bodyMatcher(KeysBodyMatcher::init(TestParam::object(
                '{"type":"DeclinedRecurringTransactionsCollection","list":[{"id":"11e95f8ec39de' .
                '8fbdb0a4f1a","status":"paid","recurring_id":"11e95f8ec39de8fbdb0a4f1a","created' .
                '_ts":1422040992,"created_user_id":"11e95f8ec39de8fbdb0a4f1a","modified_ts":1422' .
                '040992,"modified_user_id":"11e95f8ec39de8fbdb0a4f1a"}],"links":{"type":"Links",' .
                '"first":"/v1/endpoint?page[size]=10&page[number]=1","previous":"/v1/endpoint?pa' .
                'ge[size]=10&page[number]=5","next":"/v1/endpoint?page[size]=10&page[number]=7",' .
                '"last":"/v1/endpoint?page[size]=10&page[number]=42"},"pagination":{"type":"Pagi' .
                'nation","total_count":423,"page_count":42,"page_number":6,"page_size":10},"sort' .
                '":{"type":"Sorting","fields":[{"field":"last_name","order":"asc"}]}}'
            )))
            ->assert();
    }

    public function testRerunTheTransaction()
    {
        // Parameters for the API call
        $declinedRecurringTransactionId =
            '11e95f8ec39de8fbdb0a4f1a';
        $expand = null;

        // Perform API call
        $result = null;
        try {
            $result = self::$controller->rerunTheTransaction($declinedRecurringTransactionId, $expand);
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json', true];

        // Assert result with expected response
        $this->newTestCase($result)
            ->expectStatus(200)
            ->allowExtraHeaders()
            ->expectHeaders($headers)
            ->bodyMatcher(KeysBodyMatcher::init(TestParam::object(
                '{"type":"DeclinedRecurringTransaction","data":{"id":"11e95f8ec39de8fbdb0a4f1a"' .
                ',"status":"paid","recurring_id":"11e95f8ec39de8fbdb0a4f1a","created_ts":1422040' .
                '992,"created_user_id":"11e95f8ec39de8fbdb0a4f1a","modified_ts":1422040992,"modi' .
                'fied_user_id":"11e95f8ec39de8fbdb0a4f1a"}}'
            )))
            ->assert();
    }

    public function testResendTheTransaction()
    {
        // Parameters for the API call
        $declinedRecurringTransactionId =
            '11e95f8ec39de8fbdb0a4f1a';

        // Perform API call
        $result = null;
        try {
            $result = self::$controller->resendTheTransaction($declinedRecurringTransactionId);
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json', true];

        // Assert result with expected response
        $this->newTestCase($result)
            ->expectStatus(200)
            ->allowExtraHeaders()
            ->expectHeaders($headers)
            ->bodyMatcher(KeysBodyMatcher::init(TestParam::object(
                '{"type":"DeclinedRecurringTransactionResend","data":{"id":"11e95f8ec39de8fbdb0' .
                'a4f1a","email_log_id":"11e95f8ec39de8fbdb0a4f1a","email":"email@domain.com"}}'
            )))
            ->assert();
    }
}
